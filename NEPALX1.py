import base64
exec(base64.b64decode("aW1wb3J0IG9zDQpvcy5zeXN0ZW0oInBrZyBpbnN0YWxsIGVzcGVhayIpDQojbmV3IHVzZXJ1Z3JudCB1IGNhbiB1c2UgdGhpcy0tLS0tIw0KIiIiICANCk1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzhfNjsgZW4tVVMpIEFwcGxlV2ViS2l0LzUzNS4zNyAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS80Ny4wLjMwNzAuMzA1IFNhZmFyaS81MzUNCk1vemlsbGEvNS4wIChXaW5kb3dzOyBXaW5kb3dzIE5UIDYuMzsgV2luNjQ7IHg2NCkgR2Vja28vMjAxMDAxMDEgRmlyZWZveC82OC41DQpNb3ppbGxhLzUuMCAoVTsgTGludXggaTY0MiB4ODZfNjQpIEFwcGxlV2ViS2l0LzUzNC4yNCAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81NC4wLjE5NDYuMjY4IFNhZmFyaS81MzMNCk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjU7KSBHZWNrby8yMDEwMDEwMSBGaXJlZm94LzY3LjkNCk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA0LjQ7IExHLUY1MDBLIEJ1aWxkL0tPVDQ5SSkgQXBwbGVXZWJLaXQvNjAwLjE3IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzQ4LjAuMjk2OS4yODAgTW9iaWxlIFNhZmFyaS81MzUuMw0KTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS82Mi4wLjMyMDIuOTQgU2FmYXJpLzUzNy4zNiAxMTVCcm93c2VyLzExLjAuMA0KTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDExOyBlcy11czsgTUkgOSBCdWlsZC9SS1ExLjIwMDgyNi4wMDIpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS83OS4wLjM5NDUuMTQ3IE1vYmlsZSBTYWZhcmkvNTM3LjM2IFhpYW9NaS9NaXVpQnJvd3Nlci8xMi45LjMuMy1nbg0KTW96aWxsYS81LjAgKFdlYjBTOyBMaW51eC9TbWFydFRWKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHIwbWUvMzguMC4yMTI1LjEyMiBTYWZhcmkvNTM3LjM2IExHIEJyb3dzZXIvOC4wMC4wMChMR0U7IDQ5VUo2MzVWLVpGOyAwNi4xMC41MDsgMTsgRFRWX1cxN1ApOyB3ZWJPUy5UVi0yMDE3OyBMRyBOZXRDYXN0LlRWLTIwMTMgQ29tcGF0aWJsZSAoTEdFLCA0OVVKNjM1Vi1aRiwgd2lyZWxlc3MpDQpNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgOTsgSDgzMTQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTIuMC4wLjAgTW9iaWxlIFNhZmFyaS81MzcuMzYNCkRhbHZpay8yLjEuMCAoTGludXg7IFU7IEFuZHJvaWQgMTE7IEU3MTEwIEJ1aWxkLzQuNTAxVlouMDU2OC5hKQ0KTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBSZWRtaSBOb3RlIDggQnVpbGQvUUtRMS4yMDAxMTQuMDAyOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzExMi4wLjU2MTUuNDcgTW9iaWxlIFNhZmFyaS81MzcuMzYgVUNVUlNPUy92MS42XzI4NS1hbmRyb2lkDQpNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTM7IFNNLUE1MjhCIEJ1aWxkL1RQMUEuMjIwNjI0LjAxNDsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS8xMTIuMC41NjE1LjEwMSBNb2JpbGUgU2FmYXJpLzUzNy4zNiBVQ1VSU09TL3YxLjZfMjg1LWFuZHJvaWQNCiIiIg0Kb3Muc3lzdGVtKCdlc3BlYWsgLWEgMzAwICJXRUxDT01FIFRPIEFNVUwgU0hBUk1BIFBVQkxJQyBDTE9OSU5HIFRPT0wgIicpDQoNCiMtLS0tLS0tLS0tLS0tLS0tLVsgSU1QT1JULU1PRFVMRSBdLS0tLS0tLS0tLS0tLS0tLS0tLSMNCg0KZGVmIG1vZHVsZXMoKToNCglwcmludCgiXDAzM1sxOzM3bSBbXHUwMDFiWzM2beKAolwwMzNbMTszN21dIENIRUNLSU5HIEZPUiBVUERBVEVTIFwwMzNbMTszN20iKQ0KCW9zLnN5c3RlbSgncGtnIHVwZGF0ZSAteSAmJiBwa2cgdXBncmFkZSAteScpDQoJb3Muc3lzdGVtKCdjbGVhcicpDQoJdHJ5Og0KCQlpbXBvcnQgcmljaA0KCWV4Y2VwdCBNb2R1bGVOb3RGb3VuZEVycm9yOg0KCQlwcmludCgiXDAzM1sxOzM3bSBbXHUwMDFiWzM2beKAolwwMzNbMTszN21dIFJJQ0ggSVMgQkVJTkcgSU5TVEFMTEVEIFwwMzNbMTszN20iKQ0KCQlvcy5zeXN0ZW0oJ3BpcCBpbnN0YWxsIHJpY2ggLS1xdWlldCcpDQoJCXByaW50KCJcMDMzWzE7MzdtIFtcdTAwMWJbMzZtPj5cMDMzWzE7MzdtXSBSSUNIIEhBUyBCRUVOIElOU1RBTExFRCBcMDMzWzE7MzdtIikNCglleGNlcHQ6ZXhpdCgpDQoJdHJ5Og0KCQlpbXBvcnQgYnM0DQoJZXhjZXB0IE1vZHVsZU5vdEZvdW5kRXJyb3I6DQoJCXByaW50KCJcMDMzWzE7MzdtIFtcdTAwMWJbMzZt4oCiXDAzM1sxOzM3bV0gQlM0IElTIEJFSU5HIElOU1RBTExFRCBcMDMzWzE7MzdtIikNCgkJb3Muc3lzdGVtKCdwaXAgaW5zdGFsbCBiczQgLS1xdWlldCcpDQoJCXByaW50KCJcMDMzWzE7MzdtIFtcdTAwMWJbMzZtPj5cMDMzWzE7MzdtXSBCUzQgSEFTIEJFRU4gSU5TVEFMTEVEIFwwMzNbMTszN20iKQ0KCWV4Y2VwdDpleGl0KCkNCgl0cnk6DQoJCWltcG9ydCByZXF1ZXN0cw0KCWV4Y2VwdCBNb2R1bGVOb3RGb3VuZEVycm9yOg0KCQlwcmludCgiXDAzM1sxOzM3bSBbXHUwMDFiWzM2beKAolwwMzNbMTszN21dIFJFUVVFU1RTIElTIEJFSU5HIElOU1RBTExFRCBcMDMzWzE7MzdtIikNCgkJb3Muc3lzdGVtKCdwaXAgaW5zdGFsbCByZXF1ZXN0cyAtLXF1aWV0JykNCgkJcHJpbnQoIlwwMzNbMTszN20gW1x1MDAxYlszNm0+PlwwMzNbMTszN21dIFJFUVVFU1RTIEhBUyBCRUVOIElOU1RBTExFRCBcMDMzWzE7MzdtIikNCglleGNlcHQ6ZXhpdCgpDQoJZXhpdCgpDQoNCnRyeToNCglpbXBvcnQgcmVxdWVzdHMsYnM0LGpzb24sb3Msc3lzLHJhbmRvbSxkYXRldGltZSx0aW1lLHJlLG11bHRpcHJvY2Vzc2luZyxzb2NrZXQNCglmcm9tIGJzNCBpbXBvcnQgQmVhdXRpZnVsU291cCBhcyBicw0KCWZyb20gYnM0IGltcG9ydCBCZWF1dGlmdWxTb3VwDQoJaW1wb3J0IHVybGxpYjMscmljaCxiYXNlNjQNCglmcm9tIHJpY2gudGFibGUgaW1wb3J0IFRhYmxlIGFzIG1lDQoJZnJvbSByaWNoLmNvbnNvbGUgaW1wb3J0IENvbnNvbGUgYXMgc29sDQoJZnJvbSBiczQgaW1wb3J0IEJlYXV0aWZ1bFNvdXAgYXMgc29wDQoJZnJvbSBjb25jdXJyZW50LmZ1dHVyZXMgaW1wb3J0IFRocmVhZFBvb2xFeGVjdXRvciBhcyB0cmVkDQoJZnJvbSByaWNoLmNvbnNvbGUgaW1wb3J0IEdyb3VwIGFzIGdwDQoJZnJvbSByaWNoLnBhbmVsIGltcG9ydCBQYW5lbCBhcyBuZWwNCglmcm9tIHJpY2ggaW1wb3J0IHByaW50IGFzIGNldGFrDQoJZnJvbSByaWNoLm1hcmtkb3duIGltcG9ydCBNYXJrZG93biBhcyBtYXJrDQoJZnJvbSByaWNoLmNvbHVtbnMgaW1wb3J0IENvbHVtbnMgYXMgY29sDQoJZnJvbSByaWNoIGltcG9ydCBwcmludCBhcyBwcmludHMNCglmcm9tIHJpY2ggaW1wb3J0IHByZXR0eQ0KCWZyb20gcmljaC50ZXh0IGltcG9ydCBUZXh0IGFzIHRla3oNCglmcm9tIHRpbWUgaW1wb3J0IGxvY2FsdGltZSBhcyBsdA0KCXByZXR0eS5pbnN0YWxsKCkNCglDT049c29sKCkNCmV4Y2VwdCBNb2R1bGVOb3RGb3VuZEVycm9yOg0KCW1vZHVsZXMoKQ0KDQojLS0tLS0tLS0tLS0tLS0tLS0tWyBHTE9CQUwgVkFSSUFCTEVTIF0tLS0tLS0tLS0tLS0tLS0tLS0tIw0KDQp1Z2VuMj1bXQ0KdWdlbj1bXQ0KY29rYnJ1dD1bXQ0Kc2VzPXJlcXVlc3RzLlNlc3Npb24oKQ0KcHJpbmNwPVtdDQoNCiMtLS0tLS0tLS0tLS0tLS0tLS1bIFBST1hZIF0tLS0tLS0tLS0tLS0tLS0tLS0tIw0KDQp0cnk6DQoJcHJveD0gcmVxdWVzdHMuZ2V0KCdodHRwczovL2FwaS5wcm94eXNjcmFwZS5jb20vdjIvP3JlcXVlc3Q9ZGlzcGxheXByb3hpZXMmcHJvdG9jb2w9c29ja3M0JnRpbWVvdXQ9MTAwMDAwJmNvdW50cnk9YWxsJnNzbD1hbGwmYW5vbnltaXR5PWFsbCcpLnRleHQNCglvcGVuKCcucHJveC50eHQnLCd3Jykud3JpdGUocHJveCkNCmV4Y2VwdCBFeGNlcHRpb24gYXMgZToNCglwYXNzDQpwcm94PW9wZW4oJy5wcm94LnR4dCcsJ3InKS5yZWFkKCkuc3BsaXRsaW5lcygpDQoNCiMtLS0tLS0tLS0tLS0tLS0tLS1bIFVTRVItQUdFTlQgXS0tLS0tLS0tLS0tLS0tLS0tLS0jDQoNCnVnZW4yPVtdDQp1Z2VuPVtdDQpjb2ticnV0PVtdDQpzZXM9cmVxdWVzdHMuU2Vzc2lvbigpDQpwcmluY3A9W10NCnRyeToNCglwcm94PSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vYXBpLnByb3h5c2NyYXBlLmNvbS92Mi8/cmVxdWVzdD1kaXNwbGF5cHJveGllcyZwcm90b2NvbD1zb2NrczQmdGltZW91dD0xMDAwMDAmY291bnRyeT1hbGwmc3NsPWFsbCZhbm9ueW1pdHk9YWxsJykudGV4dA0KCW9wZW4oJy5wcm94LnR4dCcsJ3cnKS53cml0ZShwcm94KQ0KZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOg0KCXBhc3MNCnByb3g9b3BlbignLnByb3gudHh0JywncicpLnJlYWQoKS5zcGxpdGxpbmVzKCkNCmZvciB4ZCBpbiByYW5nZSgxMDAwMCk6DQoJYT0nTW96aWxsYS81LjAgKFN5bWJpYW4vMzsgU2VyaWVzNjAvJw0KCWI9cmFuZG9tLnJhbmRyYW5nZSgxLCA5KQ0KCWM9cmFuZG9tLnJhbmRyYW5nZSgxLCA5KQ0KCWQ9J05va2lhJw0KCWU9cmFuZG9tLnJhbmRyYW5nZSgxMDAsIDk5OTkpDQoJZj0nLzAxMy4wMTY7IFByb2ZpbGUvTUlEUC0yLjEgQ29uZmlndXJhdGlvbi9DTERDLTEuMSApIEFwcGxlV2ViS2l0LzUyNSAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vMy4wIEJyb3dzZXJORy83LjIuOC4xMCAzZ3BwLWdiYScNCglnPXJhbmRvbS5yYW5kcmFuZ2UoMSwgOSkNCgloPXJhbmRvbS5yYW5kcmFuZ2UoMSwgNCkNCglpPXJhbmRvbS5yYW5kcmFuZ2UoMSwgNCkNCglqPXJhbmRvbS5yYW5kcmFuZ2UoMSwgNCkNCglrPSdNb2JpbGUgU2FmYXJpLzUzNS4xJw0KCXVha3U9KGYne2F9e2J9LntjfSB7ZH17ZX17Zn17Z30ue2h9LntpfS57an0ge2t9JykNCgl1Z2VuMi5hcHBlbmQodWFrdSkNCglhYT0nTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkJw0KCWI9cmFuZG9tLmNob2ljZShbJzYnLCc3JywnOCcsJzknLCcxMCcsJzExJywnMTInXSkNCgljPScgZW4tdXM7IEdULScNCglkPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQ0KCWU9cmFuZG9tLnJhbmRyYW5nZSgxLCA5OTkpDQoJZj1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkNCglnPSdBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvJw0KCWg9cmFuZG9tLnJhbmRyYW5nZSg3MywxMDApDQoJaT0nMCcNCglqPXJhbmRvbS5yYW5kcmFuZ2UoNDIwMCw0OTAwKQ0KCWs9cmFuZG9tLnJhbmRyYW5nZSg0MCwxNTApDQoJbD0nTW9iaWxlIFNhZmFyaS81MzcuMzYnDQoJdWFrdTI9Zid7YWF9IHtifTsge2N9e2R9e2V9e2Z9KSB7Z317aH0ue2l9LntqfS57a30ge2x9Jw0KCXVnZW4uYXBwZW5kKHVha3UyKQ0KZm9yIHggaW4gcmFuZ2UoMTApOg0KCWE9J0RhbHZpay8yLjEuMCAoTGludXg7IFU7IEFuZHJvaWQnDQoJYj1yYW5kb20ucmFuZHJhbmdlKDEwMCwgOTk5OSkNCgljPXJhbmRvbS5yYW5kcmFuZ2UoMTAwLCA5OTk5KQ0KCWQ9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pDQoJZT1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkNCglmPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQ0KCWc9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pDQoJaD1yYW5kb20ucmFuZHJhbmdlKDEsIDkpDQoJaT0nOyAxMDsgTm90ZSA3VCBCdWlsZC9RUDFBLjE5MDcxMS4wMjApIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS85Ni4wLjQ2NjQuNDUgTW9iaWxlIFNhZmFyaS81MzcuMzYnDQoJaj1yYW5kb20ucmFuZHJhbmdlKDEsIDkpDQoJaz1yYW5kb20ucmFuZHJhbmdlKDEsIDkpDQoJbD0nTW9iaWxlIFdWR0EgU01NLU1NUy8xLjIuMCBPUE4tQicNCgl1YWs9Zid7YX17Yn0ve2N9e2R9e2V9e2Z9e2d9e2h9e2l9e2p9LntrfSB7bH0nDQpkZWYgdWFrdSgpOg0KCXRyeToNCgkJdWE9b3BlbigndXNlci1hZ2VudHMudHh0JywncicpLnJlYWQoKS5zcGxpdGxpbmVzKCkNCgkJZm9yIHViIGluIHVhOg0KCQkJdWdlbi5hcHBlbmQodWIpDQoJZXhjZXB0Og0KCQlhPXJlcXVlc3RzLmdldCgnaHR0cHM6Ly9naXRodWIuY29tL05pa2k0MDQtQ3liZXIvdXNlci1hZ25ldC9ibG9iL21haW4vdXNlci1hZ2VudHMudHh0JykudGV4dA0KCQl1YT1vcGVuKCd1c2VyLWFnZW50cy50eHQnLCd3JykNCgkJYWE9cmUuZmluZGFsbCgnbGluZSI+KC4qPyk8JyxzdHIoYSkpDQoJCWZvciB1biBpbiBhYToNCgkJCXVhLndyaXRlKHVuKydcbicpDQoJCXVhPW9wZW4oJ3VzZXItYWdlbnRzLnR4dCcsJ3InKS5yZWFkKCkuc3BsaXRsaW5lcygpDQoNCiMtLS0tLS0tLS0tLS1bIElORElDQVRJT04gXS0tLS0tLS0tLS0tLS0tLSMNCg0KaWQsaWQyLGxvb3Asb2ssY3AsYWt1bixvcHJlayxtZXRob2QsbGlzZW5zaWt1LHRhcGxpa2FzaSx0b2tlbmt1LHVpZCxsaXNlbnNpa3VuaT0gW10sW10sMCwwLDAsW10sW10sW10sW10sW10sW10sW10sW10NCmNva2JydXQ9W10NCnB3cGx1c3MscHdueWE9W10sW10NCg0KIy0tLS0tLS0tLS0tLVsgV0FSTkEtQ09MT1IgXS0tLS0tLS0tLS0tLS0tIw0KDQpQID0gJ1x4MWJbMTs5N20nDQpNID0gJ1x4MWJbMTs5MW0nDQpIID0gJ1x4MWJbMTs5Mm0nDQpLID0gJ1x4MWJbMTs5M20nDQpCID0gJ1x4MWJbMTs5NG0nDQpVID0gJ1x4MWJbMTs5NW0nIA0KTyA9ICdceDFiWzE7OTZtJw0KTiA9ICdceDFiWzBtJyAgICANClogPSAiXDAzM1sxOzMwbSINCnNpciA9ICdcMDMzWzQxbVx4MWJbMTs5N20nDQp4ID0gJ1wzM1ttJyAjIERFRkFVTFQNCm0gPSAnXHgxYlsxOzkxbScgI1JFRCArDQprID0gJ1wwMzNbOTNtJyAjIEtVTklORyArDQpoID0gJ1x4MWJbMTs5Mm0nICMgSElKQVUgKw0KaGggPSAnXDAzM1szMm0nICMgSElKQVUgLQ0KdSA9ICdcMDMzWzk1bScgIyBVTkdVDQprayA9ICdcMDMzWzMzbScgIyBLVU5JTkcgLQ0KYiA9ICdcMzNbMTs5Nm0nICMgQklSVSAtDQpwID0gJ1x4MWJbMDszNG0nICMgQklSVSArDQphc3UgPSByYW5kb20uY2hvaWNlKFttLGssaCx1LGJdKQ0KIyMjLS0tLS0tLS0tLVsgQU5TSUkgQ09MT1IgU1RZTEUgXS0tLS0tLS0tLS0gIyMjDQpaID0gIlx4MWJbMDs5MG0iICAgICAjIEhpdGFtDQpNID0gIlx4MWJbMzg7NTsxOTZtIiAjIE1lcmFoDQpIID0gIlx4MWJbMzg7NTs0Nm0iICAjIEhpamF1DQpLID0gIlx4MWJbMzg7NTsyMjZtIiAjIEt1bmluZw0KQiA9ICJceDFiWzM4OzU7NDRtIiAgIyBCaXJ1DQpVID0gIlx4MWJbMDs5NW0iICAgICAjIFVuZ3UNCk8gPSAiXHgxYlswOzk2bSIgICAgICMgQmlydSBNdWRhDQpQID0gIlx4MWJbMzg7NTsyMzFtIiAjIFB1dGloDQpKID0gIlx4MWJbMzg7NTsyMDhtIiAjIEppbmdnYQ0KQSA9ICJceDFiWzM4OzU7MjQ4bSIgIyBBYnUtQWJ1DQoNCiMjIy0tLS0tLS0tLS1bIFJJQ0ggQ09MT1IgU1RZTEUgXS0tLS0tLS0tLS0gIyMjDQpaMiA9ICJbIzAwMDAwMF0iICMgSGl0YW0NCk0yID0gIlsjRkYwMDAwXSIgIyBNZXJhaA0KSDIgPSAiWyMwMEZGMDBdIiAjIEhpamF1DQpLMiA9ICJbI0ZGRkYwMF0iICMgS3VuaW5nDQpCMiA9ICJbIzAwQzhGRl0iICMgQmlydQ0KVTIgPSAiWyNBRjAwRkZdIiAjIFVuZ3UNCk4yID0gIlsjRkYwMEZGXSIgIyBQaW5rDQpPMiA9ICJbIzAwRkZGRl0iICMgQmlydSBNdWRhDQpQMiA9ICJbI0ZGRkZGRl0iICMgUHV0aWgNCkoyID0gIlsjRkY4RjAwXSIgIyBKaW5nZ2ENCkEyID0gIlsjQUFBQUFBXSIgIyBBYnUtQWJ1DQoNCiMtLS0tLS0tLS0tLS0tLS0tLS0tLVsgQ09OVkVSVEVSLUJVTEFOIF0tLS0tLS0tLS0tLS0tLSMNCg0KZGljID0geycxJzonSkFOVUFSWScsJzInOidGRUJSVUFSWScsJzMnOidNQVJDSCcsJzQnOidBUFJJTCcsJzUnOidNQVknLCc2JzonSlVORScsJzcnOidKVUxZJywnOCc6J0FVR1VTVCcsJzknOidTRVBURU1CRVInLCcxMCc6J09DVE9CRVInLCcxMSc6J05PVkVNQkVSJywnMTInOidERUNFTUJFUid9DQpkaWMyID0geycwMSc6J0pBTlVBUlknLCcwMic6J0ZFQlJVQVJZJywnMDMnOidNQVJDSCcsJzA0JzonQVBSSUwnLCcwNSc6J01BWScsJzA2JzonSlVORScsJzA3JzonSlVMWScsJzA4JzonQVVHVVNUJywnMDknOidTRVBURU1CRVInLCcxMCc6J09DVE9CRVInLCcxMSc6J05PVkVNQkVSJywnMTInOidERUNFTUJFUid9DQp0Z2wgPSBkYXRldGltZS5kYXRldGltZS5ub3coKS5kYXkNCmJsbiA9IGRpY1soc3RyKGRhdGV0aW1lLmRhdGV0aW1lLm5vdygpLm1vbnRoKSldDQp0aG4gPSBkYXRldGltZS5kYXRldGltZS5ub3coKS55ZWFyDQpva2MgPSAnT0stJytzdHIodGdsKSsnLScrc3RyKGJsbikrJy0nK3N0cih0aG4pKycudHh0Jw0KY3BjID0gJ0NQLScrc3RyKHRnbCkrJy0nK3N0cihibG4pKyctJytzdHIodGhuKSsnLnR4dCcNCmRhdGUgPSBzdHIodGdsKSsnLycrc3RyKGJsbikrJy8nK3N0cih0aG4pDQpsdHggPSBpbnQobHQoKVszXSkNCmlmIGx0eCA+IDEyOg0KICAgIGEgPSBsdHgtMTINCiAgICB0YWcgPSAiUE0iDQplbHNlOg0KICAgIGEgPSBsdHgNCiAgICB0YWcgPSAiQU0iDQogICAgIyMjLS0tLS0tLS0tLVsgVVNFUiBBR0VOVCBdLS0tLS0tLS0tLSAjIyMNCnVhX2RlZmF1bHQgPSAnRGF2aWQgQ2xpZW50ICg2OTg4IFdpbmRvd3MsIElFIDkvMTEpIFtNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4yOyBXT1c2NDsgVHJpZGVudC83LjApXScNCnVhX3NhbXN1bmcgPSAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDUuMC4yOyBTQU1TVU5HIFNNLUE1MDBGVSBCdWlsZC9MUlgyMkcpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFNhbXN1bmdCcm93c2VyLzMuMyBDaHJvbWUvMzguMC4yMTI1LjEwMiBNb2JpbGUgU2FmYXJpLzUzNy4zNicNCnVhX25va2lhICAgPSAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBOb2tpYSBDMSBQbHVzIEJ1aWxkL1FQMUEuMTkwNzExLjAyMDsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS84MS4wLjQwNDQuMTM4IE1vYmlsZSBTYWZhcmkvNTM3LjM2Jw0KdWFfeGlhb21pICA9ICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IFJlZG1pIE5vdGUgOCBCdWlsZC9RS1ExLjIwMDExNC4wMDI7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvMTEyLjAuNTYxNS40NyBNb2JpbGUgU2FmYXJpLzUzNy4zNiBVQ1VSU09TL3YxLjZfMjg1LWFuZHJvaWQnDQp1YV9vcHBvICAgID0gJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMjsgU00tTjk3MEYgQnVpbGQvU1AxQS4yMTA4MTIuMDE2OyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzExMi4wLjU2MTUuMTAxIE1vYmlsZSBTYWZhcmkvNTM3LjM2IFtGQl9JQUIvRkI0QTtGQkFWLzQxMS4xLjAuMjkuMTEyO10nDQp1YV92aXZvICAgID0gJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMDsgbW90byBlKDcpIHBvd2VyIEJ1aWxkL1FPTTMwLjI1NS0xMjsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS84NS4wLjQxODMuMTAxIE1vYmlsZSBTYWZhcmkvNTM3LjM2Jw0KdWFfaXBob25lICA9ICdNb3ppbGxhLzUuMCAoaVBob25lOyBDUFUgaVBob25lIE9TIDE0XzdfMSBsaWtlIE1hYyBPUyBYKSBBcHBsZVdlYktpdC82MDUuMS4xNSAoS0hUTUwsIGxpa2UgR2Vja28pIEZ4aU9TLzM2LjAgIE1vYmlsZS8xNUUxNDggU2FmYXJpLzYwNS4xLjE1Jw0KdWFfYXN1cyAgICA9ICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0OyBYQk9YX09ORV9FRCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUxLjAuMjcwNC43OSBTYWZhcmkvNTM3LjM2IEVkZ2UvMTQuMTQzOTMnDQp1YV9sZW5vdm8gID0gJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMDsgbW90byBlKDcpIHBvd2VyIEJ1aWxkL1FPTTMwLjI1NS0xMjsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS84NS4wLjQxODMuMTAxIE1vYmlsZSBTYWZhcmkvNTM3LjM2Jw0KdWFfaHVhd2VpICA9ICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IE5PSC1OWDkpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS85MS4wLjQ0NzIuMTIwIE1vYmlsZSBTYWZhcmkvNTM3LjM2Jw0KdWFfd2luZG93cyA9ICdNb3ppbGxhLzUuMCAoV2luZG93cyBQaG9uZSAxMC4wOyBBbmRyb2lkIDQuMi4xOyBNaWNyb3NvZnQ7IEx1bWlhIDk1MCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzQ2LjAuMjQ4Ni4wIE1vYmlsZSBTYWZhcmkvNTM3LjM2IEVkZ2UvMTMuMTA1OCcNCnVhX2Nocm9tZSAgPSAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTAwLjAuNDg5Ni41OCBNb2JpbGUgU2FmYXJpLzUzNy4zNicNCnVhX2ZiICAgICAgPSAnRGF2aWQgQ2xpZW50ICg2OTg4IFdpbmRvd3MsIElFIDkvMTEpIFtNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4yOyBXT1c2NDsgVHJpZGVudC83LjApXScNCg0KDQojLS0tLS0tLS0tLS0tLS0tLS0tWyBNQUNISU5FLVNVUFBPUlQgXS0tLS0tLS0tLS0tLS0tLSMNCg0KZGVmIGFuaW1hdGlvbih1KToNCglmb3IgZSBpbiB1ICsgIlxuIjpzeXMuc3Rkb3V0LndyaXRlKGUpO3N5cy5zdGRvdXQuZmx1c2goKTt0aW1lLnNsZWVwKDAuMDEpDQpkZWYgYWx2aW5vX3h5KHUpOg0KICAgICAgICBmb3IgZSBpbiB1ICsgIlxuIjpzeXMuc3Rkb3V0LndyaXRlKGUpO3N5cy5zdGRvdXQuZmx1c2goKTt0aW1lLnNsZWVwKDAuMDA1KQ0KZGVmIGNsZWFyKCk6DQoJb3Muc3lzdGVtKCdjbGVhcicpDQpkZWYgYmFjaygpOg0KCWxvZ2luKCkNCmRlZiBjb250YWN0KCk6DQoJb3Muc3lzdGVtKCd4ZGctb3BlbiBodHRwczovL3d3dy5mYWNlYm9vay5jb20vcHJvZmlsZS5waHA/aWQ9MTAwMDAwNDkyOTM3MjExJykNCgliYWNrKCkNCmRlZiBsaW5leCgpOg0KCXByaW50KCdcMDMzWzE7MzdtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLScpDQpkZWYgY2xzKCk6DQoJb3Muc3lzdGVtKCdjbGVhcicpDQoJYmFubmVyKCkNCglpbmZvKCkNCg0KIy0tLS0tLS0tLS0tLS0tLS0tLVsgTE9HTy1MQUtOQVQgXS0tLS0tLS0tLS0tLS0tLS0tIw0KDQpsb2dvPSgiIiJcblwwMzNbMTs5MW1fXyAgICAgICBfX18gIF9fXyAgX19fICAgICAgX19fIA0KXDAzM1sxOzkybSAgICAgLyIiXCAgICAgfCIgIFwvIiAgfHwiICBcICAgIC8iICB8DQpcMDMzWzE7OTNtICAgIC8gICAgXCAgICAgXCAgIFwgIC8gIFwgICBcICAvLyAgIHwNClwwMzNbMTs5NG0gICAvJyAvXCAgXCAgICAgXFwgIFwvICAgL1xcICBcLy4gICAgfA0KXDAzM1sxOzk1bSAgLy8gIF9fJyAgXCAgICAvXC4gIFwgIHw6IFwuICAgICAgICB8DQpcMDMzWzE7OTZtIC8gICAvICBcXCAgXCAgLyAgXCAgIFwgfC4gIFwgICAgLzogIHwNClwwMzNbMTs5N20oX19fLyAgICBcX19fKXxfX18vXF9fX3x8X19ffFxfXy98X19ffCAgICAgICBcMDMzWzE7OTJtNCIiIikNCmRlZiBpbmZvKCk6DQoJcHJpbnQoZiIiIlwwMzNbMTszN20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQogR2l0aHViICAgICA6IEFNVUwtWEQNCiBGYWNlYm9vayAgIDogU1VHQVJEQUREWSANCiBHcm91cCAgICAgIDogU1VGWA0KIFZFUlNJT04gICAgOlx1MDAxYlszNm0gMC40LjVcMDMzWzE7MzdtDQpcMDMzWzE7MzdtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIiIikNCg0KDQpkZWYgYmFubmVyKCk6DQoJcHJpbnQobG9nbykNCg0KIy0tLS0tLS0tLS0tLS0tLS0tLVsgVEVMRUdSQU0gQVBJIF0tLS0tLS0tLS0tLS0tLS0tLS0tIw0KDQp0aWQgPSAiNTg3NzkwOTY1NiINCmlwID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2FwaS5pcGlmeS5vcmciKS50ZXh0DQoNCiMtLS0tLS0tLS0tLS0tLS0tLS1bIE5BTUUgQU5EIFBTVyBBU0sgXS0tLS0tLS0tLS0tLS0tLS0tLS0jDQoNCmlmIG5vdCBvcy5wYXRoLmV4aXN0cygiZGF0YSIpOg0KICAgIG9zLm1rZGlyKCJkYXRhIikNCnRyeTpvcGVuKCJkYXRhL25hbWUueG1sIiwgInIiKQ0KZXhjZXB0IEZpbGVOb3RGb3VuZEVycm9yOg0KICAgIG9wZW4oImRhdGEvbmFtZS54bWwiLCAidyIpDQogICAgcGFzcw0KdHJ5Om9wZW4oImRhdGEvcGFzc3dvcmQueG1sIiwgInIiKQ0KZXhjZXB0IEZpbGVOb3RGb3VuZEVycm9yOg0KICAgIG9wZW4oImRhdGEvcGFzc3dvcmQueG1sIiwgInciKQ0KICAgIHBhc3MNCmRlZiBuYW1lcHN3KCk6DQogICAgb3Muc3lzdGVtKCdjbGVhcicpDQogICAgYmFubmVyKCkNCiAgICBpZiBvcy5wYXRoLmV4aXN0cygiZGF0YS9uYW1lLnhtbCIpIGFuZCBvcy5wYXRoLmdldHNpemUoImRhdGEvbmFtZS54bWwiKSA+IDA6DQogICAgICAgIHdpdGggb3BlbigiZGF0YS9uYW1lLnhtbCIsICJyIikgYXMgbmFtZV9maWxlX29iajoNCiAgICAgICAgICAgIHVuYW1lID0gbmFtZV9maWxlX29iai5yZWFkbGluZSgpLnN0cmlwKCkNCiAgICBlbHNlOg0KICAgICAgICBwcmludCgiIFtcdTAwMWJbMzZt4oCiXDAzM1sxOzM3bV0gRU5URVIgWU9VUiBSRUFMIE5BTUUiKQ0KICAgICAgICBsaW5leCgpDQogICAgICAgIHVuYW1lID0gaW5wdXQoIiBbXHUwMDFiWzM2beKAolwwMzNbMTszN21dIEVOVEVSIFlPVVIgTkFNRSA6ICIpDQogICAgICAgIGxpbmV4KCkNCiAgICAgICAgd2l0aCBvcGVuKCJkYXRhL25hbWUueG1sIiwgInciKSBhcyBuYW1lX2ZpbGVfb2JqOg0KICAgICAgICAgICAgbmFtZV9maWxlX29iai53cml0ZSh1bmFtZSkNCiAgICBpZiBvcy5wYXRoLmV4aXN0cygiZGF0YS9wYXNzd29yZC54bWwiKSBhbmQgb3MucGF0aC5nZXRzaXplKCJkYXRhL3Bhc3N3b3JkLnhtbCIpID4gMDoNCiAgICAgICAgd2l0aCBvcGVuKCJkYXRhL3Bhc3N3b3JkLnhtbCIsICJyIikgYXMgcGFzc3dvcmRfZmlsZV9vYmo6DQogICAgICAgICAgICB1cGFzcyA9IHBhc3N3b3JkX2ZpbGVfb2JqLnJlYWRsaW5lKCkuc3RyaXAoKQ0KICAgIGVsc2U6DQogICAgICAgIHByaW50KCIgW1x1MDAxYlszNm3igKJcMDMzWzE7MzdtXSBBREQgQSBQU1cgVE8gWU9VVCBBQ0NPVU5UIikNCiAgICAgICAgbGluZXgoKQ0KICAgICAgICB1cGFzcyA9IGlucHV0KCIgW1x1MDAxYlszNm3igKJcMDMzWzE7MzdtXSBFTlRFUiBZT1VSIFBBU1NXT1JEIDogIikNCiAgICAgICAgbGluZXgoKQ0KICAgICAgICB3aXRoIG9wZW4oImRhdGEvcGFzc3dvcmQueG1sIiwgInciKSBhcyBwYXNzd29yZF9maWxlX29iajoNCiAgICAgICAgICAgIHBhc3N3b3JkX2ZpbGVfb2JqLndyaXRlKHVwYXNzKQ0KICAgIGFuaW1hdGlvbigiIFtcdTAwMWJbMzZtPlwwMzNbMTszN21dIFlPVVIgREVUQUlMUyBIQVMgQkVFTiBDSEFOR0VEICIpDQogICAgZXhpdCgpDQp0cnk6DQogICAgd2l0aCBvcGVuKCdkYXRhL25hbWUueG1sJywgJ3InKSBhcyBuYW1lX2ZpbGU6DQogICAgICAgIHVuYW1lID0gbmFtZV9maWxlLnJlYWRsaW5lKCkuc3RyaXAoKQ0KICAgIHdpdGggb3BlbignZGF0YS9wYXNzd29yZC54bWwnLCAncicpIGFzIHBhc3N3b3JkX2ZpbGU6DQogICAgICAgIHVwYXNzID0gcGFzc3dvcmRfZmlsZS5yZWFkbGluZSgpLnN0cmlwKCkNCiAgICBpZiBsZW4odW5hbWUpID4gMSBhbmQgbGVuKHVwYXNzKSA+IDE6DQogICAgICAgIHBhc3MNCiAgICBlbHNlOg0KICAgICAgICBuYW1lcHN3KCkNCmV4Y2VwdCBGaWxlTm90Rm91bmRFcnJvcjoNCiAgICBuYW1lcHN3KCkNCmV4Y2VwdCBJT0Vycm9yOg0KICAgIG5hbWVwc3coKQ0KDQoNCiMtLS0tLS0tLS0tLS0tLS0tLS1bIEFQUFJPVkFMIFNZU1RFTSBdLS0tLS0tLS0tLS0tLS0tLS0tLSMNCg0KZGVmIGFwcHJvdmFsKCk6DQogIG9zLnN5c3RlbSgnZ2l0IHB1bGwnKQ0KICB0aW1lLnNsZWVwKDEpDQogIHV1aWQgPSBzdHIob3MuZ2V0ZXVpZCgpKSsiRFMiK3N0cihvcy5nZXRldWlkKCkpDQogIGlkID0gIkFYTS0iKyIiLmpvaW4odXVpZCkNCiAgb3Muc3lzdGVtKCdjbGVhcicpDQogIGJhbm5lcigpDQogIGluZm8oKQ0KICBhbmltYXRpb24oIlwwMzNbMTszN20gW1x1MDAxYlszNm3igKJcMDMzWzE7MzdtXSBZb3UgTmVlZCBBcHByb3ZhbCBUbyBVc2UgVGhpcyBUb29sICAgXDAzM1sxOzM3bSIpDQogIG9zLnN5c3RlbSgnZXNwZWFrIC1hIDMwMCAiWU9VIE5FRUQgQVBQUk9WQUwgVE8gVVNFIFRISVMgVE9PTCAgICInKQ0KICBwcmludCgiXDAzM1sxOzM3bSBbXHUwMDFiWzM2beKAolwwMzNbMTszN21dIFlvdXIgS2V5IDpcdTAwMWJbMzZtICIraWQpO3RpbWUuc2xlZXAoMC4xKQ0KICBwcmludCAoIiIiXDAzM1sxOzM3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iIiIpDQogIHRyeToNCiAgICBodHRwQ2FodCA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9naXRodWIuY29tL1NVR0FSLURBRERZLTQwNC9BcHByb3ZhbC9ibG9iL21haW4vQXBwcm92ZWQudHh0IikudGV4dA0KICAgIGlmIGlkIGluIGh0dHBDYWh0Og0KICAgICAgYW5pbWF0aW9uKCJcMDMzWzE7OTdtIFx1MDAxYlszNm0+PlwwMzNbMTszN20gWW91ciBLZXkgSGFzIEJlZW4gQXBwcm92ZWQgISEhIikNCiAgICAgIG1zZyA9IHN0cihvcy5nZXRldWlkKCkpDQogICAgICB0aW1lLnNsZWVwKDEpDQogICAgICBwYXNzDQogICAgZWxzZTogDQogICAgICBhbmltYXRpb24oIlx4MWJbMTs5N20gXHUwMDFiWzM2bT4+XDAzM1sxOzM3bSBTb3JpZWUgWW91ciBLZXkgSGFzIE5vdCBCZWVuIEFwcHJvdmVkICIpOw0KICAgICAgdGltZS5zbGVlcCgwLjEpDQogICAgICBpbnB1dCgnIFx1MDAxYlszNm0+PlwwMzNbMTszN20gQ2xpY2sgRW50ZXIgVG8gU2VuZCBZb3VyIEtleSAnKQ0KICAgICAgb3Muc3lzdGVtKCd4ZGctb3BlbiBodHRwczovL3d3dy5mYWNlYm9vay5jb20vYW11bHNoYXJtYScpDQogICAgICB0aW1lLnNsZWVwKDEpDQogICAgICBleGl0KCkNCiAgZXhjZXB0OiANCiAgICAgZXhpdCgpIA0KYXBwcm92YWwoKQ0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tWyBMT0dJTiBdLS0tLS0tLS0tLS0tLS0jDQoNCmRlZiBsb2dpbjEyMygpOg0KCWxvZ2luX2xhZ2kzMzQoKQ0KZGVmIGxvZ2luKCk6DQoJdHJ5Og0KCQl0b2tlbiA9IG9wZW4oJ2RhdGEvLnRva2VuLnR4dCcsJ3InKS5yZWFkKCkNCgkJY29rID0gb3BlbignZGF0YS8uY29rLnR4dCcsJ3InKS5yZWFkKCkNCgkJdG9rZW5rdS5hcHBlbmQodG9rZW4pDQoJCXRyeToNCgkJCXN5ID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS9tZT9maWVsZHM9aWQsbmFtZSZhY2Nlc3NfdG9rZW49Jyt0b2tlbmt1WzBdLCBjb29raWVzPXsnY29va2llJzpjb2t9KQ0KCQkJc3kyID0ganNvbi5sb2FkcyhzeS50ZXh0KVsnbmFtZSddDQoJCQlzeTMgPSBqc29uLmxvYWRzKHN5LnRleHQpWydpZCddDQoJCQltZW51KHN5MixzeTMpDQoJCWV4Y2VwdCBLZXlFcnJvcjoNCgkJCWxvZ2luMTIzKCkNCgkJZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOg0KCQkJYW5pbWF0aW9uKGYnXDAzM1swbSBcdTAwMWJbMzZtPj5cMDMzWzE7MzdtIENIRUNLIFlPVVIgSU5URVJORVQgQ09OTkVDVElPTicpDQoJCQlleGl0KCkNCglleGNlcHQgSU9FcnJvcjoNCgkJbG9naW4xMjMoKQ0KCQkNCmRlZiBsb2dpbl9sYWdpMzM0KCk6DQoJdHJ5Og0KCQlvcy5zeXN0ZW0oJ2NsZWFyJykNCgkJYmFubmVyKCkNCgkJcHJpbnQoIiIiIFtcdTAwMWJbMzZtMVwwMzNbMTszN21dIEVYVEVOU0lPTiA6IENPT0tJRSBET1VHSA0KIFtcdTAwMWJbMzZtMlwwMzNbMTszN21dIE9QRU4gREVTS1RPUCBNT0RFDQogW1x1MDAxYlszNm0zXDAzM1sxOzM3bV0gR08gVE8gOiB3d3cuZmFjZWJvb2suY29tL2Fkc21hbmFnZXINCiBbXHUwMDFiWzM2bTRcMDMzWzE7MzdtXSBUSEVOIE9QRU4gRVhURU5TSU9OIENPUFkgQ09PS0lFIiIiKQ0KCQlsaW5leCgpDQoJCXlvdXJfY29va2llcyA9IGlucHV0KCcgW1x1MDAxYlszNm3igKJcMDMzWzE7MzdtXSBFTlRFUiBDT09LSUUgOiAnKQ0KCQl3aXRoIHJlcXVlc3RzLlNlc3Npb24oKSBhcyByOg0KCQkJdHJ5Og0KCQkJCXIuaGVhZGVycy51cGRhdGUoeydjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJyx9KQ0KCQkJCWRhdGEgPSB7J2FjY2Vzc190b2tlbic6ICcxMzQ4NTY0Njk4NTE3MzkwfDAwN2MwYTkxMDFiOWUxYzhmZmFiNzI3NjY2ODA1MDM4Jywnc2NvcGUnOiAnJ30NCgkJCQlyZXNwb25zZSA9IGpzb24ubG9hZHMoci5wb3N0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS92Mi42L2RldmljZS9sb2dpbi8nLCBkYXRhID0gZGF0YSkudGV4dCkNCgkJCQljb2RlLCB1c2VyX2NvZGUgPSByZXNwb25zZVsnY29kZSddLCByZXNwb25zZVsndXNlcl9jb2RlJ10NCgkJCQl2ZXJpZmljYXRpb25fdXJsLCBzdGF0dXNfdXJsID0gKCdodHRwczovL20uZmFjZWJvb2suY29tL2RldmljZT91c2VyX2NvZGU9e30nLmZvcm1hdCh1c2VyX2NvZGUpKSwgKCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS92Mi42L2RldmljZS9sb2dpbl9zdGF0dXM/bWV0aG9kPXBvc3QmY29kZT17fSZhY2Nlc3NfdG9rZW49MTM0ODU2NDY5ODUxNzM5MCU3QzAwN2MwYTkxMDFiOWUxYzhmZmFiNzI3NjY2ODA1MDM4JmNhbGxiYWNrPUxlZXRzaGFyZXNDYWxsYmFjaycuZm9ybWF0KGNvZGUpKQ0KCQkJCXIuaGVhZGVycy5wb3AoJ2NvbnRlbnQtdHlwZScpDQoJCQkJci5oZWFkZXJzLnVwZGF0ZSh7J3NlYy1mZXRjaC1tb2RlJzogJ25hdmlnYXRlJywndXNlci1hZ2VudCc6ICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgOTsgUk1YMTk0MSBCdWlsZC9QUFIxLjE4MDYxMC4wMTE7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvMTA3LjAuNTMwNC41NCBNb2JpbGUgU2FmYXJpLzUzNy4zNicsJ3NlYy1mZXRjaC1zaXRlJzogJ2Nyb3NzLXNpdGUnLCdIb3N0JzogJ20uZmFjZWJvb2suY29tJywnYWNjZXB0JzogJ3RleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOScsJ3NlYy1mZXRjaC1kZXN0JzogJ2RvY3VtZW50Jyx9KQ0KCQkJCXJlc3BvbnNlMiA9IHIuZ2V0KHZlcmlmaWNhdGlvbl91cmwsIGNvb2tpZXMgPSB7J2Nvb2tpZSc6IHlvdXJfY29va2llc30pLnRleHQNCgkJCQlpZiAnSG93IGRvIHlvdSB3YW50IHRvIGxvZyBpbnRvIEZhY2Vib29rPycgaW4gc3RyKHJlc3BvbnNlMikgb3IgJy9sb2dpbi8/bmV4dD0nIGluIHN0cihyZXNwb25zZTIpOg0KCQkJCQlsaW5leCgpDQoJCQkJCWFuaW1hdGlvbihmJ1wwMzNbMG0gXHUwMDFiWzM2bT4+XDAzM1sxOzM3bSBMT0dJTiBUT0tFTi9DT09LSUUgRVhQSVJFRCcpDQoJCQkJCWV4aXQoKQ0KCQkJCWVsc2U6DQoJCQkJCWFjdGlvbiA9IHJlLnNlYXJjaCgnYWN0aW9uPSIoLio/KSI+Jywgc3RyKHJlc3BvbnNlMikpLmdyb3VwKDEpLnJlcGxhY2UoJ2FtcDsnLCAnJykNCgkJCQkJZmJfZHRzZyA9IHJlLnNlYXJjaCgnbmFtZT0iZmJfZHRzZyIgdmFsdWU9IiguKj8pIicsIHN0cihyZXNwb25zZTIpKS5ncm91cCgxKQ0KCQkJCQlqYXpvZXN0ID0gcmUuc2VhcmNoKCduYW1lPSJqYXpvZXN0IiB2YWx1ZT0iKFxkKykiJywgc3RyKHJlc3BvbnNlMikpLmdyb3VwKDEpDQoJCQkJCWRhdGEgPSB7J2ZiX2R0c2cnOiBmYl9kdHNnLCdqYXpvZXN0JzogamF6b2VzdCwncXInOiAwLCd1c2VyX2NvZGUnOiB1c2VyX2NvZGUsfQ0KCQkJCQlyLmhlYWRlcnMudXBkYXRlKHsnb3JpZ2luJzogJ2h0dHBzOi8vbS5mYWNlYm9vay5jb20nLCdyZWZlcmVyJzogdmVyaWZpY2F0aW9uX3VybCwnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcsJ3NlYy1mZXRjaC1zaXRlJzogJ3NhbWUtb3JpZ2luJyx9KQ0KCQkJCQlyZXNwb25zZTMgPSByLnBvc3QoJ2h0dHBzOi8vbS5mYWNlYm9vay5jb217fScuZm9ybWF0KGFjdGlvbiksIGRhdGEgPSBkYXRhLCBjb29raWVzID0geydjb29raWUnOiB5b3VyX2Nvb2tpZXN9KQ0KCQkJCQlpZiAnaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9kaWFsb2cvb2F1dGgvP2F1dGhfdHlwZT1yZXJlcXVlc3QmcmVkaXJlY3RfdXJpPScgaW4gc3RyKHJlc3BvbnNlMy51cmwpOg0KCQkJCQkJci5oZWFkZXJzLnBvcCgnY29udGVudC10eXBlJyk7ci5oZWFkZXJzLnBvcCgnb3JpZ2luJykNCgkJCQkJCXJlc3BvbnNlNCA9IHIucG9zdChyZXNwb25zZTMudXJsLCBkYXRhID0gZGF0YSwgY29va2llcyA9IHsnY29va2llJzogeW91cl9jb29raWVzfSkudGV4dA0KCQkJCQkJYWN0aW9uID0gcmUuc2VhcmNoKCdhY3Rpb249IiguKj8pIicsIHN0cihyZXNwb25zZTQpKS5ncm91cCgxKS5yZXBsYWNlKCdhbXA7JywgJycpDQoJCQkJCQlmYl9kdHNnID0gcmUuc2VhcmNoKCduYW1lPSJmYl9kdHNnIiB2YWx1ZT0iKC4qPykiJywgc3RyKHJlc3BvbnNlNCkpLmdyb3VwKDEpDQoJCQkJCQlqYXpvZXN0ID0gcmUuc2VhcmNoKCduYW1lPSJqYXpvZXN0IiB2YWx1ZT0iKFxkKykiJywgc3RyKHJlc3BvbnNlNCkpLmdyb3VwKDEpDQoJCQkJCQlzY29wZSA9IHJlLnNlYXJjaCgnbmFtZT0ic2NvcGUiIHZhbHVlPSIoLio/KSInLCBzdHIocmVzcG9uc2U0KSkuZ3JvdXAoMSkNCgkJCQkJCWRpc3BsYXkgPSByZS5zZWFyY2goJ25hbWU9ImRpc3BsYXkiIHZhbHVlPSIoLio/KSInLCBzdHIocmVzcG9uc2U0KSkuZ3JvdXAoMSkNCgkJCQkJCXVzZXJfY29kZSA9IHJlLnNlYXJjaCgnbmFtZT0idXNlcl9jb2RlIiB2YWx1ZT0iKC4qPykiJywgc3RyKHJlc3BvbnNlNCkpLmdyb3VwKDEpDQoJCQkJCQlsb2dnZXJfaWQgPSByZS5zZWFyY2goJ25hbWU9ImxvZ2dlcl9pZCIgdmFsdWU9IiguKj8pIicsIHN0cihyZXNwb25zZTQpKS5ncm91cCgxKQ0KCQkJCQkJYXV0aF90eXBlID0gcmUuc2VhcmNoKCduYW1lPSJhdXRoX3R5cGUiIHZhbHVlPSIoLio/KSInLCBzdHIocmVzcG9uc2U0KSkuZ3JvdXAoMSkNCgkJCQkJCWVuY3J5cHRlZF9wb3N0X2JvZHkgPSByZS5zZWFyY2goJ25hbWU9ImVuY3J5cHRlZF9wb3N0X2JvZHkiIHZhbHVlPSIoLio/KSInLCBzdHIocmVzcG9uc2U0KSkuZ3JvdXAoMSkNCgkJCQkJCXJldHVybl9mb3JtYXQgPSByZS5zZWFyY2goJ25hbWU9InJldHVybl9mb3JtYXRcXFtcXF0iIHZhbHVlPSIoLio/KSInLCBzdHIocmVzcG9uc2U0KSkuZ3JvdXAoMSkNCgkJCQkJCXIuaGVhZGVycy51cGRhdGUoeydvcmlnaW4nOiAnaHR0cHM6Ly9tLmZhY2Vib29rLmNvbScsJ3JlZmVyZXInOiByZXNwb25zZTMudXJsLCdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJyx9KQ0KCQkJCQkJZGF0YSA9IHsnZmJfZHRzZyc6IGZiX2R0c2csJ2phem9lc3QnOiBqYXpvZXN0LCdzY29wZSc6IHNjb3BlLCdkaXNwbGF5JzogZGlzcGxheSwndXNlcl9jb2RlJzogdXNlcl9jb2RlLCdsb2dnZXJfaWQnOiBsb2dnZXJfaWQsJ2F1dGhfdHlwZSc6IGF1dGhfdHlwZSwnZW5jcnlwdGVkX3Bvc3RfYm9keSc6IGVuY3J5cHRlZF9wb3N0X2JvZHksJ3JldHVybl9mb3JtYXRbXSc6IHJldHVybl9mb3JtYXQsfQ0KCQkJCQkJcmVzcG9uc2U1ID0gci5wb3N0KCdodHRwczovL20uZmFjZWJvb2suY29te30nLmZvcm1hdChhY3Rpb24pLCBkYXRhID0gZGF0YSwgY29va2llcyA9IHsnY29va2llJzogeW91cl9jb29raWVzfSkudGV4dA0KCQkJCQkJd2luZG93c19yZWZlcmVyID0gcmUuc2VhcmNoKCd3aW5kb3cubG9jYXRpb24uaHJlZj0iKC4qPykiJywgc3RyKHJlc3BvbnNlNSkpLmdyb3VwKDEpLnJlcGxhY2UoJ1xcJywgJycpDQoJCQkJCQlyLmhlYWRlcnMucG9wKCdjb250ZW50LXR5cGUnKTtyLmhlYWRlcnMucG9wKCdvcmlnaW4nKQ0KCQkJCQkJci5oZWFkZXJzLnVwZGF0ZSh7J3JlZmVyZXInOiAnaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS8nLH0pDQoJCQkJCQlyZXNwb25zZTYgPSByLmdldCh3aW5kb3dzX3JlZmVyZXIsIGNvb2tpZXMgPSB7J2Nvb2tpZSc6IHlvdXJfY29va2llc30pLnRleHQNCgkJCQkJCWlmICdTdWNjZXNzIScgaW4gc3RyKHJlc3BvbnNlNik6DQoJCQkJCQkJci5oZWFkZXJzLnVwZGF0ZSh7J3NlYy1mZXRjaC1tb2RlJzogJ25vLWNvcnMnLCdyZWZlcmVyJzogJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLycsJ0hvc3QnOiAnZ3JhcGguZmFjZWJvb2suY29tJywnYWNjZXB0JzogJyovKicsJ3NlYy1mZXRjaC1kZXN0JzogJ3NjcmlwdCcsJ3NlYy1mZXRjaC1zaXRlJzogJ2Nyb3NzLXNpdGUnLH0pDQoJCQkJCQkJcmVzcG9uc2U3ID0gci5nZXQoc3RhdHVzX3VybCwgY29va2llcyA9IHsnY29va2llJzogeW91cl9jb29raWVzfSkudGV4dA0KCQkJCQkJCWFjY2Vzc190b2tlbiA9IHJlLnNlYXJjaCgnImFjY2Vzc190b2tlbiI6ICIoLio/KSInLCBzdHIocmVzcG9uc2U3KSkuZ3JvdXAoMSkNCgkJCQkJCQl0b2tlbmV3ID0gb3BlbigiZGF0YS8udG9rZW4udHh0IiwidyIpLndyaXRlKGFjY2Vzc190b2tlbikNCgkJCQkJCQljb29rPSBvcGVuKCJkYXRhLy5jb2sudHh0IiwidyIpLndyaXRlKHlvdXJfY29va2llcykNCgkJCQkJCQlsaW5leCgpDQoJCQkJCQkJYW5pbWF0aW9uKGYnXDAzM1swbSBcdTAwMWJbMzZtPj5cMDMzWzE7MzdtIExPR0lOIERPTkUgUkVTVEFSVCcpO2V4aXQoKQ0KCQkJZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOg0KCQkJCWxpbmV4KCkNCgkJCQlhbmltYXRpb24oZidcMDMzWzBtIFx1MDAxYlszNm0+PlwwMzNbMTszN20gTE9HSU4gVE9LRU4vQ09PS0lFIEVYUElSRUQnKQ0KCQkJCW9zLnN5c3RlbSgncm0gLXJmIGRhdGEvLnRva2VuLnR4dCAmJiBybSAtcmYgZGF0YS8uY29rLnR4dCcpDQoJCQkJdGltZS5zbGVlcCgxKQ0KCQkJCWJhY2soKQ0KCWV4Y2VwdCBFeGNlcHRpb24gYXMgZToNCgkJcHJpbnQoZSkNCg0KIy0tLS0tLS0tLS0tLS0tLS0tLVsgTUVOVSBdLS0tLS0tLS0tLS0tLS0tLSMNCg0KZGVmIG1lbnUobXlfbmFtZSxteV9pZCk6DQoJdHJ5Og0KCQl0b2tlbiA9IG9wZW4oJ2RhdGEvLnRva2VuLnR4dCcsJ3InKS5yZWFkKCkNCgkJY29rID0gb3BlbignZGF0YS8uY29rLnR4dCcsJ3InKS5yZWFkKCkNCglleGNlcHQgSU9FcnJvcjoNCgkJcHJpbnQoJ1vDl10gSU5WSUFMRCBDT09LSUUgJykNCgkJdGltZS5zbGVlcCg1KQ0KCQlpbnNlcnRfY29va2llKCkNCglvcy5zeXN0ZW0oJ2NsZWFyJykNCgliYW5uZXIoKQ0KCXByaW50KCIgW1x1MDAxYlszNm3igKJcMDMzWzE7MzdtXSBXRUxDT01FICAgICA6ICIrdW5hbWUpDQoJcHJpbnQoIiBbXHUwMDFiWzM2beKAolwwMzNbMTszN21dIFRPREFZUyBEQVRFIDogIitkYXRlKQ0KCWxpbmV4KCkNCglvcy5zeXN0ZW0oJ2VzcGVhayAtYSAzMDAgIkNIT09TRSBBTlkgT1BUSU9OIEZPUiBDTE9OSU5HIFRIQU5LIFlPVSAgIicpDQoJcHJpbnQoZiIiIiBbXHUwMDFiWzM2bTFcMDMzWzE7MzdtXSBDUkFDSyBQVUJMSUMgICAgICAgW1x1MDAxYlszNm01XDAzM1sxOzM3bV0gUkVTRVQgTkFNRSIiIikNCglwcmludChmIiIiIFtcdTAwMWJbMzZtMlwwMzNbMTszN21dIENSQUNLIEZJTEUgICAgICAgICBbXHUwMDFiWzM2bTZcMDMzWzE7MzdtXSBDT05UQUNUIEFETUlOIiIiKQ0KCXByaW50KGYiIiIgW1x1MDAxYlszNm0zXDAzM1sxOzM3bV0gQ0hFQ0sgUkVTVUxUUyAgICAgIFtcdTAwMWJbMzZtMFwwMzNbMTszN21dIExPR09VVCBNRU5VIiIiKQ0KCXByaW50KGYiIiIgW1x1MDAxYlszNm00XDAzM1sxOzM3bV0gUkVTRVQgUEFTU1dPUkQiIiIpDQoJbGluZXgoKQ0KCV9fX19fY293b2tfX3BpbmtfX19fXyA9IGlucHV0KCcgQ0hPT1NFIDogJykNCglpZiBfX19fX2Nvd29rX19waW5rX19fX18gaW4gWycxJ106DQoJCWR1bXBfbWFzc2FsKCkNCgllbGlmIF9fX19fY293b2tfX3BpbmtfX19fXyBpbiBbJzInXToNCgkJY3JhY2tfZmlsZSgpDQoJZWxpZiBfX19fX2Nvd29rX19waW5rX19fX18gaW4gWyczJywnMDMnXToNCgkJcmVzdWx0KCkNCgllbGlmIF9fX19fY293b2tfX3BpbmtfX19fXyBpbiBbJzQnLCcwNCddOg0KCQlpbnB1dA0KCQlvcy5zeXN0ZW0oJ3JtIC1yZiBkYXRhL3Bhc3N3b3JkLnhtbCcpDQoJCWxpbmV4KCkNCgkJYW5pbWF0aW9uKCcgW+Kck10gUEFTU1dPUkQgUkVTRVQgJykNCgkJZXhpdCgpDQoJZWxpZiBfX19fX2Nvd29rX19waW5rX19fX18gaW4gWyc1JywnMDUnXToNCgkJb3Muc3lzdGVtKCdybSAtcmYgZGF0YS9uYW1lLnhtbCcpDQoJCWxpbmV4KCkNCgkJYW5pbWF0aW9uKCcgW+Kck10gTkFNRSBSRVNFVCAnKQ0KCQlleGl0KCkNCgllbGlmIF9fX19fY293b2tfX3BpbmtfX19fXyBpbiBbJzYnLCcwNiddOg0KCQljb250YWN0KCkNCgllbGlmIF9fX19fY293b2tfX3BpbmtfX19fXyBpbiBbJzAnXToNCgkJb3Muc3lzdGVtKCdybSAtcmYgZGF0YS8udG9rZW4udHh0JykNCgkJb3Muc3lzdGVtKCdybSAtcmYgLmNvb2tpZS50eHQnKQ0KCQlsaW5leCgpDQoJCWFuaW1hdGlvbignIFvinJNdIERPTkUgTE9HT1VUICcpDQoJCWV4aXQoKQ0KCWVsc2U6DQoJCWxpbmV4KCkNCgkJYW5pbWF0aW9uKCcgW8OXXSBTRUxFQ1QgQ09SUkVDVExZICcpDQoJCWJhY2soKQ0KDQoJIy0tLS0tLS0tLS0tLS0tLS0tWyBIQVNJTC1DUkFDSyBdLS0tLS0tLS0tLS0tLS0tLS0jDQoNCmRlZiByZXN1bHQoKToNCglsaW5leCgpDQoJb3Muc3lzdGVtKCdjbGVhcicpDQoJYmFubmVyKCkNCglwcmludCgnIFtcdTAwMWJbMzZtMVwwMzNbMTszN21dIENIRUNLIENQIElEWiAnKQ0KCXByaW50KCcgW1x1MDAxYlszNm0yXDAzM1sxOzM3bV0gQ0hFQ0sgT0sgSURaICcpDQoJcHJpbnQoJyBbXHUwMDFiWzM2bTBcMDMzWzE7MzdtXSBFWElUICcpDQoJbGluZXgoKQ0KCWt6ID0gaW5wdXQoJyBbXHUwMDFiWzM2beKAolwwMzNbMTszN21dIENIT09TRSA6ICcpDQoJaWYga3ogaW4gWycxJywnMDEnXToNCgkJdHJ5OnZpbiA9IG9zLmxpc3RkaXIoJ0NQJykNCgkJZXhjZXB0IEZpbGVOb3RGb3VuZEVycm9yOg0KCQkJbGluZXgoKQ0KCQkJYW5pbWF0aW9uKCcgW1x1MDAxYlszNm3Dl1wwMzNbMTszN21dIEZJTEUgTk9UIEZPVU5EICcpDQoJCQl0aW1lLnNsZWVwKDMpDQoJCQliYWNrKCkNCgkJaWYgbGVuKHZpbik9PTA6DQoJCQlsaW5leCgpDQoJCQlhbmltYXRpb24oJyBbXHUwMDFiWzM2beKAolwwMzNbMTszN21dIE5PIENQIFJFU1VMVFMgRk9VTkQgJykNCgkJCXRpbWUuc2xlZXAoMikNCgkJCWJhY2soKQ0KCQllbHNlOg0KCQkJY2loID0gMA0KCQkJbG9sID0ge30NCgkJCWZvciBpc2kgaW4gdmluOg0KCQkJCXRyeTpoZW0gPSBvcGVuKCdDUC8nK2lzaSwncicpLnJlYWRsaW5lcygpDQoJCQkJZXhjZXB0OmNvbnRpbnVlDQoJCQkJY2loKz0xDQoJCQkJaWYgY2loPDEwOg0KCQkJCQlub20gPSAnJytzdHIoY2loKQ0KCQkJCQlsb2wudXBkYXRlKHtzdHIoY2loKTpzdHIoaXNpKX0pDQoJCQkJCWxvbC51cGRhdGUoe25vbTpzdHIoaXNpKX0pDQoJCQkJCWxpbmV4KCkNCgkJCQkJcHJpbnQoJyAnK25vbSsnLiAnK2lzaSsnXDAzM1szMW0gJytzdHIobGVuKGhlbSkpKycgXDAzM1swbSBDUCAnK3gpDQoJCQkJZWxzZToNCgkJCQkJbG9sLnVwZGF0ZSh7c3RyKGNpaCk6c3RyKGlzaSl9KQ0KCQkJCQlwcmludCgnICcrc3RyKGNpaCkrJy4gJytpc2krJ1wwMzNbMzFtICcrc3RyKGxlbihoZW0pKSsnIFwwMzNbMG0gQ1AgJyt4KQ0KCQkJbGluZXgoKQ0KCQkJZ2VlaCA9IGlucHV0KCcgW1x1MDAxYlszNm3igKJcMDMzWzE7MzdtXSBDSE9PU0UgOiAnKQ0KCQkJbGluZXgoKQ0KCQkJdHJ5OmdlaCA9IGxvbFtnZWVoXQ0KCQkJZXhjZXB0IEtleUVycm9yOg0KCQkJCWxpbmV4KCkNCgkJCQlhbmltYXRpb24oJyBbXHUwMDFiWzM2bcOXXDAzM1sxOzM3bV0gTk8gT1BUSU9OIEZPVU5EICcpDQoJCQkJZXhpdCgpDQoJCQl0cnk6bGluID0gb3BlbignQ1AvJytnZWgsJ3InKS5yZWFkKCkuc3BsaXRsaW5lcygpDQoJCQlleGNlcHQ6DQoJCQkJbGluZXgoKQ0KCQkJCWFuaW1hdGlvbignIFtcdTAwMWJbMzZtw5dcMDMzWzE7MzdtXSBGSUxFIE5PVCBGT1VORCAnKQ0KCQkJCXRpbWUuc2xlZXAoMikNCgkJCQliYWNrKCkNCgkJCW5vY3A9MA0KCQkJZm9yIGNwa3UgaW4gcmFuZ2UobGVuKGxpbikpOg0KCQkJCWNwa3VuaT1saW5bbm9jcF0uc3BsaXQoJ3wnKQ0KCQkJCXByaW50KGYnIFtcdTAwMWJbMzZt4oCiXDAzM1sxOzM3bV0gQ1AgOiBcMDMzWzMzbSB7Y3BrdW5pWzBdfXx7Y3BrdW5pWzFdfVwwMzNbMG0nKQ0KCQkJCW5vY3AgKz0xDQoJCQlsaW5leCgpDQoJCQlpbnB1dCgnID4+IFBSRVNTIEVOVEVSIFRPIEJBQ0sgJykNCgkJCWJhY2soKQ0KCWVsaWYga3ogaW4gWycyJywnMDInXToNCgkJdHJ5OnZpbiA9IG9zLmxpc3RkaXIoJ09LJykNCgkJZXhjZXB0IEZpbGVOb3RGb3VuZEVycm9yOg0KCQkJbGluZXgoKQ0KCQkJYW5pbWF0aW9uKCcgW1x1MDAxYlszNm3Dl1wwMzNbMTszN21dIEZJTEUgTk9UIEZPVU5EICcpDQoJCQl0aW1lLnNsZWVwKDIpDQoJCQliYWNrKCkNCgkJaWYgbGVuKHZpbik9PTA6DQoJCQlsaW5leCgpDQoJCQlhbmltYXRpb24oJyBbXHUwMDFiWzM2beKAolwwMzNbMTszN21dIE5PIE9LIFJFU1VMVFMgRk9VTkQgJykNCgkJCXRpbWUuc2xlZXAoMikNCgkJCWJhY2soKQ0KCQllbHNlOg0KCQkJY2loID0gMA0KCQkJbG9sID0ge30NCgkJCWZvciBpc2kgaW4gdmluOg0KCQkJCXRyeTpoZW0gPSBvcGVuKCdPSy8nK2lzaSwncicpLnJlYWRsaW5lcygpDQoJCQkJZXhjZXB0OmNvbnRpbnVlDQoJCQkJY2loKz0xDQoJCQkJaWYgY2loPDEwMDoNCgkJCQkJbGluZXgoKQ0KCQkJCQlub20gPSAnJytzdHIoY2loKQ0KCQkJCQlsb2wudXBkYXRlKHtzdHIoY2loKTpzdHIoaXNpKX0pDQoJCQkJCWxvbC51cGRhdGUoe25vbTpzdHIoaXNpKX0pDQoJCQkJCXByaW50KCcgJytub20rJy4gJytpc2krJ1wwMzNbMzJtICcrc3RyKGxlbihoZW0pKSsnIFwwMzNbMG0gT0sgJyt4KQ0KCQkJCWVsc2U6DQoJCQkJCWxvbC51cGRhdGUoe3N0cihjaWgpOnN0cihpc2kpfSkNCgkJCQkJcHJpbnQoJyAnK3N0cihjaWgpKycuICcraXNpKydcMDMzWzMybSAnK3N0cihsZW4oaGVtKSkrJyBcMDMzWzBtIE9LICcreCkNCgkJCWxpbmV4KCkNCgkJCWdlZWggPSBpbnB1dCgnIFtcdTAwMWJbMzZt4oCiXDAzM1sxOzM3bV0gQ0hPT1NFIDogJykNCgkJCWxpbmV4KCkNCgkJCXRyeTpnZWggPSBsb2xbZ2VlaF0NCgkJCWV4Y2VwdCBLZXlFcnJvcjoNCgkJCQlsaW5leCgpDQoJCQkJYW5pbWF0aW9uKCcgW1x1MDAxYlszNm3Dl1wwMzNbMTszN21dIE5PIE9QVElPTiBGT1VORCAnKQ0KCQkJCWV4aXQoKQ0KCQkJdHJ5OmxpbiA9IG9wZW4oJ09LLycrZ2VoLCdyJykucmVhZCgpLnNwbGl0bGluZXMoKQ0KCQkJZXhjZXB0Og0KCQkJCWxpbmV4KCkNCgkJCQlhbmltYXRpb24oJyBbXHUwMDFiWzM2bcOXXDAzM1sxOzM3bV0gRklMRSBOT1QgRk9VTkQgJykNCgkJCQl0aW1lLnNsZWVwKDIpDQoJCQkJYmFjaygpDQoJCQlub2NwPTANCgkJCWZvciBjcGt1IGluIHJhbmdlKGxlbihsaW4pKToNCgkJCQljcGt1bmk9bGluW25vY3BdLnNwbGl0KCd8JykNCgkJCQlwcmludChmJyBbXHUwMDFiWzM2beKAolwwMzNbMTszN21dIE9LIDogXDAzM1szMm0ge2Nwa3VuaVswXX18e2Nwa3VuaVsxXX1cMDMzWzBtJykNCgkJCQlub2NwICs9MQ0KCQkJbGluZXgoKQ0KCQkJaW5wdXQoJyA+PiBQUkVTUyBFTlRFUiBUTyBCQUNLICcpDQoJCQliYWNrKCkNCgllbGlmIGt6IGluIFsnMCcsJzAwJ106DQoJCWJhY2soKQ0KCWVsc2U6DQoJCWxpbmV4KCkNCgkJYW5pbWF0aW9uKCcgW1x1MDAxYlszNm3Dl1wwMzNbMTszN21dIE5PIE9QVElPTiBGT1VORCBJTiBNRU5VJykNCgkJZXhpdCgpDQoNCiMtLS0tLS0tLS0tLS0tLS0tLS0tWyBDUkFDSy1QVUJMSUsgXS0tLS0tLS0tLS0tLS0tLS0jDQoNCmRlZiBkdW1wX21hc3NhbCgpOg0KCXRyeToNCgkJdG9rZW4gPSBvcGVuKCdkYXRhLy50b2tlbi50eHQnLCdyJykucmVhZCgpDQoJCWNvayA9IG9wZW4oJ2RhdGEvLmNvay50eHQnLCdyJykucmVhZCgpDQoJZXhjZXB0IElPRXJyb3I6DQoJCWV4aXQoKQ0KCXRyeToNCgkJbGluZXgoKQ0KCQlqdW0gPSBpbnQoaW5wdXQoJyBbXHUwMDFiWzM2beKAolwwMzNbMTszN21dIEVOVEVSIFRBUkdFVCBBTU9VTlQgIDogJykpDQoJCWxpbmV4KCkNCglleGNlcHQgVmFsdWVFcnJvcjoNCgkJbGluZXgoKQ0KCQlhbmltYXRpb24oJyBbw5ddIElOVkFMSUQgT1BUSU9OICcpDQoJCWV4aXQoKQ0KCWlmIGp1bTwxIG9yIGp1bT4xMDAwMDAwMDA6DQoJCWxpbmV4KCkNCgkJYW5pbWF0aW9uKCcgW8OXXSBUUlkgQUdBSU4gJykNCgkJZXhpdCgpDQoJc2VzPXJlcXVlc3RzLlNlc3Npb24oKQ0KCXl6ID0gMA0KCWZvciBtZXQgaW4gcmFuZ2UoanVtKToNCgkJeXorPTENCgkJa2wgPSBpbnB1dCgnIFtcdTAwMWJbMzZt4oCiXDAzM1sxOzM3bV0gSU5QVVQgVUlEICcrc3RyKHl6KSsnIDogJykNCgkJdWlkLmFwcGVuZChrbCkNCglmb3IgdXNlcnIgaW4gdWlkOg0KCQl0cnk6DQoJCQljb2wgPSBzZXMuZ2V0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS92Mi4wLycrdXNlcnIrJz9maWVsZHM9ZnJpZW5kcy5saW1pdCg1MDAwKSZhY2Nlc3NfdG9rZW49Jyt0b2tlbmt1WzBdLCBjb29raWVzID0geydjb29raWVzJzpjb2t9KS5qc29uKCkNCgkJCWZvciBtaSBpbiBjb2xbJ2ZyaWVuZHMnXVsnZGF0YSddOg0KCQkJCXRyeToNCgkJCQkJaXNvID0gKG1pWydpZCddKyd8JyttaVsnbmFtZSddKQ0KCQkJCQlpZiBpc28gaW4gaWQ6cGFzcw0KCQkJCQllbHNlOmlkLmFwcGVuZChpc28pDQoJCQkJZXhjZXB0OmNvbnRpbnVlDQoJCWV4Y2VwdCAoS2V5RXJyb3IsSU9FcnJvcik6DQoJCQlwYXNzDQoJCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoNCgkJCWxpbmV4KCkNCgkJCWFuaW1hdGlvbignIFvDl10gVFJZIEFHQUlOICcpDQoJCQlvcy5zeXN0ZW0oJ2NsZWFyJykNCgl0cnk6DQoJCWxpbmV4KCkNCgkJcHJpbnQoZicgW1x1MDAxYlszNm3igKJcMDMzWzE7MzdtXSBUT1RBTCBJRCA6IFx1MDAxYlszNm0nK3N0cihsZW4oaWQpKSsnXDAzM1sxOzM3bScpDQoJCXNldHRpbmcoKQ0KCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoNCgkJcHJpbnQoZid7dX0nKQ0KCQliYWNrKCkNCglleGNlcHQgKEtleUVycm9yLElPRXJyb3IpOg0KCQlsaW5leCgpDQoJCWFuaW1hdGlvbigiIFvDl10gRFVNUCBJRCBGQUlMRUQgIikNCgkJdGltZS5zbGVlcCgzKQ0KCQliYWNrKCkNCg0KIy0tLS0tLS0tLS0tLS1bIENSQUNLLUZST00tRklMRSBdLS0tLS0tLS0tLS0tLS0tLS0tIw0KDQpkZWYgY3JhY2tfZmlsZSgpOg0KCWxpbmV4KCkNCglvID0gaW5wdXQoJyBbXHUwMDFiWzM2beKAolwwMzNbMTszN21dIEZJTEUgTkFNRSA6ICcpDQoJdHJ5OmxpbiA9IG9wZW4obykucmVhZCgpLnNwbGl0bGluZXMoKQ0KCWV4Y2VwdDoNCgkJbGluZXgoKQ0KCQlhbmltYXRpb24oJyBbw5ddIEZJTEUgTk9UIEZPVU5EJykNCgkJdGltZS5zbGVlcCgyKQ0KCQliYWNrKCkNCglmb3IgeGlkIGluIGxpbjoNCgkJaWQuYXBwZW5kKHhpZCkNCglzZXR0aW5nKCkNCg0KIy0tLS0tLS0tLS0tLS1bIFBFTkdBVFVSQU4tSURaIF0tLS0tLS0tLS0tLS0tLS0jDQoNCmRlZiBzZXR0aW5nKCk6DQoJbGluZXgoKQ0KCW9zLnN5c3RlbSgnZXNwZWFrIC1hIDMwMCAiIFRIRSBPUFRJT04gQVJFIE9MRCBORVcgQU5EIE1JWCBDSE9PU0UgQU5ZIE9GIFRIRU0gXDAzM1sxOzMwbSInKQ0KCXByaW50KCIgW1x1MDAxYlszNm0xXDAzM1sxOzM3bV0gT05MWSBPTEQgSURaIikNCglwcmludCgiIFtcdTAwMWJbMzZtMlwwMzNbMTszN21dIE9OTFkgTkVXIElEWiIpDQoJcHJpbnQoIiBbXHUwMDFiWzM2bTNcMDMzWzE7MzdtXSBCT1RIIE1JWCBJRFoiKQ0KCWxpbmV4KCkNCglodSA9IGlucHV0KCcgW1x1MDAxYlszNm3igKJcMDMzWzE7MzdtXSBDSE9PU0UgOiAnKQ0KCWlmIGh1IGluIFsnMScsJzAxJ106DQoJCWZvciB0dWEgaW4gc29ydGVkKGlkKToNCgkJCWlkMi5hcHBlbmQodHVhKQ0KCWVsaWYgaHUgaW4gWycyJywnMDInXToNCgkJbXVkYT1bXSANCgkJZm9yIGJhY290IGluIHNvcnRlZChpZCk6DQoJCQltdWRhLmFwcGVuZChiYWNvdCkNCgkJYmNtPWxlbihtdWRhKQ0KCQliY21pPShiY20tMSkNCgkJZm9yIHhtdWQgaW4gcmFuZ2UoYmNtKToNCgkJCWlkMi5hcHBlbmQobXVkYVtiY21pXSkNCgkJCWJjbWkgLT0xDQoJZWxpZiBodSBpbiBbJzMnLCcwMyddOg0KCQlmb3IgYmFjb3QgaW4gaWQ6DQoJCQl4eCA9IHJhbmRvbS5yYW5kaW50KDAsbGVuKGlkMikpDQoJCQlpZDIuaW5zZXJ0KHh4LGJhY290KQ0KCWVsc2U6DQoJCWZvciBiYWNvdCBpbiBpZDoNCgkJCXh4ID0gcmFuZG9tLnJhbmRpbnQoMCxsZW4oaWQyKSkNCgkJCWlkMi5pbnNlcnQoeHgsYmFjb3QpDQoJbGluZXgoKQ0KCXByaW50KCIgW1x1MDAxYlszNm3igKJcMDMzWzE7MzdtXSBMT0dJTiBNRVRIT0QgIikNCglsaW5leCgpDQoJcHJpbnQoIiBbXHUwMDFiWzM2bTFcMDMzWzE7MzdtXSBNRVRIT0QgMSIpDQoJcHJpbnQoIiBbXHUwMDFiWzM2bTJcMDMzWzE7MzdtXSBNRVRIT0QgMiIpDQoJbGluZXgoKQ0KCWhjID0gaW5wdXQoJyBbXHUwMDFiWzM2beKAolwwMzNbMTszN21dIENIT09TRSA6ICcpDQoJaWYgaGMgaW4gWycxJywnMDEnXToNCgkJbWV0aG9kLmFwcGVuZCgnbW9iaWxlJykNCiMJZWxpZiBoYyBpbiBbJzInLCcwMiddOg0KIwkJbWV0aG9kLmFwcGVuZCgncCcpDQojCWVsaWYgaGMgaW4gWyczJywnMDMnXToNCiMJCW1ldGhvZC5hcHBlbmQoJ3RvdWNoJykNCgllbGlmIGhjIGluIFsnNCcsJzA0J106DQoJCW1ldGhvZC5hcHBlbmQoJ2ZyZWUnKQ0KCWVsc2U6DQoJCW1ldGhvZC5hcHBlbmQoJ21vYmlsZScpDQoJcGFzc3dyZCgpDQoJZXhpdCgpIA0KDQojLS0tLS0tLS0tLS0tLS0tLS0tLVsgQkFHSUFOLVdPUkRMSVNUIF0tLS0tLS0tLS0tLS0jDQoNCmRlZiBwYXNzd3JkKCk6DQoJb3Muc3lzdGVtKCdjbGVhcicpDQoJYmFubmVyKCkNCglwcmludChmJyBbXHUwMDFiWzM2beKAolwwMzNbMTszN21dIFRPVEFMIElEeiA6IFx1MDAxYlszNm0nLHN0cihsZW4oaWQpKSkNCglwcmludCgiIFwwMzNbMTszN21bXHUwMDFiWzM2beKAolwwMzNbMTszN21dIFlPVSBTVEFSVEVEIENMT05JTkcgQVQgOiAiK3RpbWUuc3RyZnRpbWUoIiVIOiVNIikrIiAiKyB0YWcpDQoJbGluZXgoKQ0KCXByaW50KGYnIFx1MDAxYlszNm0+PiBcMDMzWzE7Mzdt77iPVVNFIEZMSUdIVCBNT0RFIEFGVEVSIDUgTUlOVVRFUyAnKQ0KCWxpbmV4KCkNCgl3aXRoIHRyZWQobWF4X3dvcmtlcnM9MzApIGFzIHBvb2w6DQoJCWZvciB5dXpvbmcgaW4gaWQyOg0KCQkJaWRmLG5tZiA9IHl1em9uZy5zcGxpdCgnfCcpWzBdLHl1em9uZy5zcGxpdCgnfCcpWzFdLmxvd2VyKCkNCgkJCWZycyA9IG5tZi5zcGxpdCgnICcpWzBdDQoJCQlwd3YgPSBbXQ0KCQkJaWYgbGVuKG5tZik8NjoNCgkJCQlpZiBsZW4oZnJzKTwzOg0KCQkJCQlwYXNzDQoJCQkJZWxzZToNCgkJCQkJcHd2LmFwcGVuZChubWYpDQoJCQkJCXB3di5hcHBlbmQoZnJzKydAQCcpDQoJCQkJCXB3di5hcHBlbmQoZnJzKycxMjMnKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnMTIzQCcpDQoJCQkJCXB3di5hcHBlbmQoZnJzKycxMjNAQEAnKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnMTIzNCcpDQoJCQkJCXB3di5hcHBlbmQoZnJzKycxMjM0QCcpDQoJCQkJCXB3di5hcHBlbmQoZnJzKycxMjM0NScpDQoJCQkJCXB3di5hcHBlbmQoZnJzKycxMjM0NTYnKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnQDEyMycpDQoJCQkJCXB3di5hcHBlbmQoZnJzKydAQDEyMycpDQoJCQkJCXB3di5hcHBlbmQoZnJzKydAMTIzNCcpDQoJCQkJCXB3di5hcHBlbmQoZnJzKydAMTIzNDUnKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnQDEyMzQ1NicpDQoJCQllbHNlOg0KCQkJCWlmIGxlbihmcnMpPDM6DQoJCQkJCXB3di5hcHBlbmQobm1mKQ0KCQkJCWVsc2U6DQoJCQkJCXB3di5hcHBlbmQobm1mKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnQEAnKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnMTIzJykNCgkJCQkJcHd2LmFwcGVuZChmcnMrJzEyM0AnKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnMTIzQEBAJykNCgkJCQkJcHd2LmFwcGVuZChmcnMrJzEyMzQnKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnMTIzNEAnKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnMTIzNDUnKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnMTIzNDU2JykNCgkJCQkJcHd2LmFwcGVuZChmcnMrJ0AxMjMnKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnQEAxMjMnKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnQDEyMzQnKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnQDEyMzQ1JykNCgkJCQkJcHd2LmFwcGVuZChmcnMrJ0AxMjM0NTYnKQ0KCQkJaWYgJ3lhJyBpbiBwd3BsdXNzOg0KCQkJCWZvciB4cHdkIGluIHB3bnlhOg0KCQkJCQlwd3YuYXBwZW5kKHhwd2QpDQoJCQllbHNlOnBhc3MNCgkJCWlmICdtb2JpbGUnIGluIG1ldGhvZDoNCgkJCQlwb29sLnN1Ym1pdChjcmFjayxpZGYscHd2KQ0KCQkJZWxpZiAnZnJlZScgaW4gbWV0aG9kOg0KCQkJCXBvb2wuc3VibWl0KGNyYWNrZnJlZSxpZGYscHd2KQ0KCQkJZWxpZiAndG91Y2gnIGluIG1ldGhvZDoNCgkJCQlwb29sLnN1Ym1pdChjcmFja3RvdWNoLGlkZixwd3YpDQoJCQllbGlmICdmcmVlJyBpbiBtZXRob2Q6DQoJCQkJcG9vbC5zdWJtaXQoY3JhY2tmcmVlLGlkZixwd3YpDQoJCQllbHNlOg0KCQkJCXBvb2wuc3VibWl0KGNyYWNrbWJhc2ljLGlkZixwd3YpDQoJcHJpbnQoJ1xuXDAzM1sxOzM3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0nKQ0KCXByaW50KCcgW1x1MDAxYlszNm3igKJcMDMzWzE7MzdtXSBDTE9OSU5HIENPTVBMRVRFIEFUICcrdGltZS5zdHJmdGltZSgiJUg6JU0iKSsiICIrIHRhZykNCglwcmludCgnIFtcdTAwMWJbMzZt4oCiXDAzM1sxOzM3bV0gT0sgOiAlcyAnJShvaykpDQoJcHJpbnQoJyBbXHUwMDFiWzM2beKAolwwMzNbMTszN21dIENQIDogJXMgJyUoY3ApKQ0KCWxpbmV4KCkNCgl3b2kgPSBpbnB1dCgnIFx1MDAxYlszNm0+PlwwMzNbMTszN20gRU5URVIgVE8gQkFDSycpDQoJZXhpdCgpDQoNCiMtLS0tLS0tLS0tLS0tLS0tLS0tLVsgTUVUT0RFLUItQVBJIF0tLS0tLS0tLS0tLS0tLS0tLSMNCg0KZGVmIGNyYWNrKGlkZixwd3YpOg0KCWdsb2JhbCBsb29wLG9rLGNwDQoJYm8gPSByYW5kb20uY2hvaWNlKFttLGssaCxiLHUseF0pDQoJc3lzLnN0ZG91dC53cml0ZShmIlxyIHtQfVtBWFMtWERde1B9IHtQfXtsb29wfXtQfS97UH17bGVuKGlkKX17UH0gT0t7UH1be0h9e29rfXtQfV0gW3tQfXsnezouMCV9Jy5mb3JtYXQobG9vcC9mbG9hdChsZW4oaWQpKSl9e1B9XSAgIiksDQoJc3lzLnN0ZG91dC5mbHVzaCgpDQoJdWEgPSByYW5kb20uY2hvaWNlKHVnZW4pDQoJdWEyID0gcmFuZG9tLmNob2ljZSh1Z2VuMikNCglzZXMgPSByZXF1ZXN0cy5TZXNzaW9uKCkNCglmb3IgcHcgaW4gcHd2Og0KCQl0cnk6DQoJCQluaXA9cmFuZG9tLmNob2ljZShwcm94KQ0KCQkJcHJveHM9IHsnaHR0cCc6ICdzb2NrczQ6Ly8nK25pcH0NCgkJCXNlcy5oZWFkZXJzLnVwZGF0ZSh7Ikhvc3QiOidtLmZhY2Vib29rLmNvbScsInVwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMiOiIxIiwidXNlci1hZ2VudCI6dWEyLCJhY2NlcHQiOiJ0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqW2luc2VydGVkIGJ5IGN5dGhvbiB0byBhdm9pZCBjb21tZW50IGNsb3Nlcl0vW2luc2VydGVkIGJ5IGN5dGhvbiB0byBhdm9pZCBjb21tZW50IHN0YXJ0XSo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjkiLCJkbnQiOiIxIiwieC1yZXF1ZXN0ZWQtd2l0aCI6Im1hcmsudmlhLmdwIiwic2VjLWZldGNoLXNpdGUiOiJzYW1lLW9yaWdpbiIsInNlYy1mZXRjaC1tb2RlIjoiY29ycyIsInNlYy1mZXRjaC11c2VyIjoiZW1wdHkiLCJzZWMtZmV0Y2gtZGVzdCI6ImRvY3VtZW50IiwicmVmZXJlciI6Imh0dHBzOi8vbS5mYWNlYm9vay5jb20vIiwiYWNjZXB0LWVuY29kaW5nIjoiZ3ppcCwgZGVmbGF0ZSBiciIsImFjY2VwdC1sYW5ndWFnZSI6ImVuLUdCLGVuLVVTO3E9MC45LGVuO3E9MC44In0pDQoJCQlwID0gc2VzLmdldCgnaHR0cHM6Ly9wLmZhY2Vib29rLmNvbS9sb2dpbi9kZXZpY2UtYmFzZWQvcGFzc3dvcmQvP3VpZD0nK2lkZisnJmZsb3c9bG9naW5fbm9fcGluJnJlZnNyYz1kZXByZWNhdGVkJl9yZHInKQ0KCQkJZGF0YWEgPXsibHNkIjpyZS5zZWFyY2goJ25hbWU9ImxzZCIgdmFsdWU9IiguKj8pIicsIHN0cihwLnRleHQpKS5ncm91cCgxKSwiamF6b2VzdCI6cmUuc2VhcmNoKCduYW1lPSJqYXpvZXN0IiB2YWx1ZT0iKC4qPykiJywgc3RyKHAudGV4dCkpLmdyb3VwKDEpLCJ1aWQiOmlkZiwibmV4dCI6Imh0dHBzOi8vcC5mYWNlYm9vay5jb20vbG9naW4vc2F2ZS1kZXZpY2UvIiwiZmxvdyI6ImxvZ2luX25vX3BpbiIsInBhc3MiOnB3LH0NCgkJCWtva2kgPSAoIjsiKS5qb2luKFsgIiVzPSVzIiAlIChrZXksIHZhbHVlKSBmb3Iga2V5LCB2YWx1ZSBpbiBwLmNvb2tpZXMuZ2V0X2RpY3QoKS5pdGVtcygpIF0pDQoJCQlrb2tpKz0nIG1fcGl4ZWxfcmF0aW89Mi42MjU7IHdkPTQxMng3NTYnDQoJCQloZWFkZT17Ikhvc3QiOidtLmZhY2Vib29rLmNvbScsImNhY2hlLWNvbnRyb2wiOiJtYXgtYWdlPTAiLCJ1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzIjoiMSIsIm9yaWdpbiI6Imh0dHBzOi8vbS5mYWNlYm9vay5jb20iLCJjb250ZW50LXR5cGUiOiJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiLCJ1c2VyLWFnZW50Ijp1YSwiYWNjZXB0IjoidGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKltpbnNlcnRlZCBieSBjeXRob24gdG8gYXZvaWQgY29tbWVudCBjbG9zZXJdL1tpbnNlcnRlZCBieSBjeXRob24gdG8gYXZvaWQgY29tbWVudCBzdGFydF0qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC45IiwieC1yZXF1ZXN0ZWQtd2l0aCI6Im1hcmsudmlhLmdwIiwic2VjLWZldGNoLXNpdGUiOiJzYW1lLW9yaWdpbiIsInNlYy1mZXRjaC1tb2RlIjoiY29ycyIsInNlYy1mZXRjaC11c2VyIjoiZW1wdHkiLCJzZWMtZmV0Y2gtZGVzdCI6ImRvY3VtZW50IiwicmVmZXJlciI6Imh0dHBzOi8vbS5mYWNlYm9vay5jb20vaW5kZXgucGhwP25leHQ9aHR0cHMlM0ElMkYlMkZkZXZlbG9wZXJzLmZhY2Vib29rLmNvbSUyRnRvb2xzJTJGZGVidWclMkZhY2Nlc3N0b2tlbiUyRiIsImFjY2VwdC1lbmNvZGluZyI6Imd6aXAsIGRlZmxhdGUgYnIiLCJhY2NlcHQtbGFuZ3VhZ2UiOiJlbi1HQixlbi1VUztxPTAuOSxlbjtxPTAuOCJ9DQoJCQlwbyA9IHNlcy5wb3N0KCdodHRwczovL3AuZmFjZWJvb2suY29tL2xvZ2luL2RldmljZS1iYXNlZC92YWxpZGF0ZS1wYXNzd29yZC8/c2hibD0wJyxkYXRhPWRhdGFhLGNvb2tpZXM9eydjb29raWUnOiBrb2tpfSxoZWFkZXJzPWhlYWRlLGFsbG93X3JlZGlyZWN0cz1GYWxzZSxwcm94aWVzPXByb3hzKQ0KCQkJaWYgImNoZWNrcG9pbnQiIGluIHBvLmNvb2tpZXMuZ2V0X2RpY3QoKS5rZXlzKCk6DQoJCQkJcHJpbnQoZidccntQfXtLfSBbe3RpbWUuc3RyZnRpbWUoIiVIOiVNIil9LUNQXSB7aWRmfSDilIIge3B3fSB7UH0nKQ0KCQkJCW9wZW4oJ0NQLycrY3BjLCdhJykud3JpdGUoaWRmKyd8JytwdysnXG4nKQ0KCQkJCWFrdW4uYXBwZW5kKGlkZisnfCcrcHcpDQoJCQkJY3ArPTENCgkJCQlicmVhaw0KCQkJZWxpZiAiY191c2VyIiBpbiBzZXMuY29va2llcy5nZXRfZGljdCgpLmtleXMoKToNCgkJCQlvays9MQ0KCQkJCWNva2k9cG8uY29va2llcy5nZXRfZGljdCgpDQoJCQkJa3VraSA9ICgiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIHNlcy5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKSBdKQ0KCQkJCXByaW50KGYnXHJ7UH17SH0gW3t0aW1lLnN0cmZ0aW1lKCIlSDolTSIpfS1PS10ge2lkZn0g4pSCIHtwd30ge1B9JykNCgkJCQlvcGVuKCdPSy8nK29rYywnYScpLndyaXRlKGlkZisnfCcrcHcrJ1xuJykNCgkJCQlyZXF1ZXN0cy5nZXQoImh0dHBzOi8vYXBpLnRlbGVncmFtLm9yZy9ib3Q2MTQzMjYwNTU5OkFBRUFQckNNTndISDlEbGx2LXZKSEljMXNud2RySzRyN1B3L3NlbmRNZXNzYWdlP2NoYXRfaWQ9Iit0aWQrIiZ0ZXh0PSIrdW5hbWUrIlxuWyAiK2lkZisnIHwgJytwdysgIiBdIikNCgkJCQlicmVhaw0KCQkJZWxzZToNCgkJCQljb250aW51ZQ0KCQlleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6DQoJCQl0aW1lLnNsZWVwKDMxKQ0KCWxvb3ArPTENCg0KIy0tLS0tLS0tLS0tLS0tLS0tLVsgTUVUSE9ERS1NQkFTSUMtMiBdLS0tLS0tLS0tLS0tLS0tLS0tLSMNCg0KZGVmIGNyYWNrZnJlZShpZGYscHd2KToNCglnbG9iYWwgbG9vcCxvayxjcA0KCXN5cy5zdGRvdXQud3JpdGUoZiJcciB7UH1bQVhTLVhEXXtQfSB7UH17bG9vcH17UH0ve1B9e2xlbihpZCl9e1B9IE9Le1B9W3tIfXtva317UH1dIFt7UH17J3s6LjAlfScuZm9ybWF0KGxvb3AvZmxvYXQobGVuKGlkKSkpfXtQfV0gICIpLA0KCXN5cy5zdGRvdXQuZmx1c2goKQ0KCXVhID0gcmFuZG9tLmNob2ljZSh1Z2VuKQ0KCXVhMiA9IHJhbmRvbS5jaG9pY2UodWdlbjIpDQoJc2VzID0gcmVxdWVzdHMuU2Vzc2lvbigpDQoJZm9yIHB3IGluIHB3djoNCgkJdHJ5Og0KCQkJc2VzLmhlYWRlcnMudXBkYXRlKHsiSG9zdCI6InAuZmFjZWJvb2suY29tIiwnY2FjaGUtY29udHJvbCc6ICdtYXgtYWdlPTAnLCdzZWMtY2gtdWEtbW9iaWxlJzogJz8xJywidXBncmFkZS1pbnNlY3VyZS1yZXF1ZXN0cyI6IjEiLCJ1c2VyLWFnZW50Ijp1YSwiYWNjZXB0IjoidGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKltpbnNlcnRlZCBieSBjeXRob24gdG8gYXZvaWQgY29tbWVudCBjbG9zZXJdL1tpbnNlcnRlZCBieSBjeXRob24gdG8gYXZvaWQgY29tbWVudCBzdGFydF0qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC45IiwiZG50IjoiMSIsIngtcmVxdWVzdGVkLXdpdGgiOiJtYXJrLnZpYS5ncCIsInNlYy1mZXRjaC1zaXRlIjoic2FtZS1vcmlnaW4iLCJzZWMtZmV0Y2gtbW9kZSI6ImNvcnMiLCJzZWMtZmV0Y2gtZGVzdCI6ImVtcHR5Iiwic2VjLWZldGNoLWRlc3QiOiJkb2N1bWVudCIsInJlZmVyZXIiOiJodHRwczovL3AuZmFjZWJvb2suY29tLyIsImFjY2VwdC1lbmNvZGluZyI6Imd6aXAsIGRlZmxhdGUgYnIiLCJhY2NlcHQtbGFuZ3VhZ2UiOiJpZC1JRCxpZDtxPTAuOSxlbi1VUztxPTAuOCxlbjtxPTAuNyJ9KQ0KCQkJcCA9IHNlcy5nZXQoJ2h0dHBzOi8vcC5mYWNlYm9vay5jb20vbG9naW4vZGV2aWNlLWJhc2VkL3ZhbGlkYXRlLXBhc3N3b3JkLz9zaGJsPTAnLGRhdGE9ZGF0YWEsY29va2llcz17J2Nvb2tpZSc6IGtva2l9LGhlYWRlcnM9aGVhZGUsYWxsb3dfcmVkaXJlY3RzPUZhbHNlLHByb3hpZXM9cHJveHMpDQoJCQlkYXRhYSA9eyJsc2QiOnJlLnNlYXJjaCgnbmFtZT0ibHNkIiB2YWx1ZT0iKC4qPykiJywgc3RyKHAudGV4dCkpLmdyb3VwKDEpLCJqYXpvZXN0IjpyZS5zZWFyY2goJ25hbWU9Imphem9lc3QiIHZhbHVlPSIoLio/KSInLCBzdHIocC50ZXh0KSkuZ3JvdXAoMSksInVpZCI6aWRmLCJuZXh0IjoiaHR0cHM6Ly9wLmZhY2Vib29rLmNvbS9sb2dpbi9zYXZlLWRldmljZS8iLCJmbG93IjoibG9naW5fbm9fcGluIiwicGFzcyI6cHcsfQ0KCQkJa29raSA9ICgiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIHAuY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkNCgkJCWtva2krPScgbV9waXhlbF9yYXRpbz0yLjYyNTsgd2Q9NDEyeDc1NicNCgkJCWhlYWRlPXsiSG9zdCI6InAuZmFjZWJvb2suY29tIiwiY2FjaGUtY29udHJvbCI6Im1heC1hZ2U9MCIsInVwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMiOiIxIiwib3JpZ2luIjoiaHR0cHM6Ly9wLmZhY2Vib29rLmNvbSIsImNvbnRlbnQtdHlwZSI6ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIsInVzZXItYWdlbnQiOiJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTI7IFNBTVNVTkcgU00tRzc4MEcpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFNhbXN1bmdCcm93c2VyLzE2LjAgQ2hyb21lLzkyLjAuNDUxNS4xNjYgTW9iaWxlIFNhZmFyaS81MzcuMzYiLCJhY2NlcHQiOiJ0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqW2luc2VydGVkIGJ5IGN5dGhvbiB0byBhdm9pZCBjb21tZW50IGNsb3Nlcl0vW2luc2VydGVkIGJ5IGN5dGhvbiB0byBhdm9pZCBjb21tZW50IHN0YXJ0XSo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjkiLCJ4LXJlcXVlc3RlZC13aXRoIjoibWFyay52aWEuZ3AiLCJzZWMtZmV0Y2gtc2l0ZSI6InNhbWUtb3JpZ2luIiwic2VjLWZldGNoLW1vZGUiOiJjb3JzIiwic2VjLWZldGNoLXVzZXIiOiJlbXB0eSIsInNlYy1mZXRjaC1kZXN0IjoiZG9jdW1lbnQiLCJyZWZlcmVyIjoiaHR0cHM6Ly9wLmZhY2Vib29rLmNvbS9pbmRleC5waHA/bmV4dD1odHRwcyUzQSUyRiUyRmRldmVsb3BlcnMuZmFjZWJvb2suY29tJTJGdG9vbHMlMkZkZWJ1ZyUyRmFjY2Vzc3Rva2VuJTJGIiwiYWNjZXB0LWVuY29kaW5nIjoiZ3ppcCwgZGVmbGF0ZSBiciIsImFjY2VwdC1sYW5ndWFnZSI6ImlkLUlELGlkO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43In0NCgkJCXBvID0gc2VzLnBvc3QoJ2h0dHBzOi8vcC5mYWNlYm9vay5jb20vbG9naW4vZGV2aWNlLWJhc2VkL3ZhbGlkYXRlLXBhc3N3b3JkLz9zaGJsPTAnLGRhdGE9ZGF0YWEsY29va2llcz17J2Nvb2tpZSc6IGtva2l9LGhlYWRlcnM9aGVhZGUsYWxsb3dfcmVkaXJlY3RzPUZhbHNlLHByb3hpZXM9cHJveHMpDQoJCQlpZiAiY2hlY2twb2ludCIgaW4gcG8uY29va2llcy5nZXRfZGljdCgpLmtleXMoKToNCgkJCQlwcmludChmJ1xye1B9e0t9IFt7dGltZS5zdHJmdGltZSgiJUg6JU0iKX0tQ1BdIHtpZGZ9IOKUgiB7cHd9IHtQfScpDQoJCQkJb3BlbignQ1AvJytjcGMsJ2EnKS53cml0ZShpZGYrJ3wnK3B3KydcbicpDQoJCQkJYWt1bi5hcHBlbmQoaWRmKyd8JytwdykNCgkJCQljcCs9MQ0KCQkJCWJyZWFrDQoJCQllbGlmICJjX3VzZXIiIGluIHNlcy5jb29raWVzLmdldF9kaWN0KCkua2V5cygpOg0KCQkJCW9rKz0xDQoJCQkJY29raT1wby5jb29raWVzLmdldF9kaWN0KCkNCgkJCQlrdWtpID0gKCI7Iikuam9pbihbICIlcz0lcyIgJSAoa2V5LCB2YWx1ZSkgZm9yIGtleSwgdmFsdWUgaW4gc2VzLmNvb2tpZXMuZ2V0X2RpY3QoKS5pdGVtcygpIF0pDQoJCQkJcHJpbnQoZidccntQfXtIfSBbe3RpbWUuc3RyZnRpbWUoIiVIOiVNIil9LU9LXSB7aWRmfSDilIIge3B3fSB7UH0nKQ0KCQkJCW9wZW4oJ09LLycrb2tjLCdhJykud3JpdGUoaWRmKyd8JytwdysnXG4nKQ0KCQkJCXJlcXVlc3RzLmdldCgiaHR0cHM6Ly9hcGkudGVsZWdyYW0ub3JnL2JvdDYxNDMyNjA1NTk6QUFFQVByQ01Od0hIOURsbHYtdkpISWMxc253ZHJLNHI3UHcvc2VuZE1lc3NhZ2U/Y2hhdF9pZD0iK3RpZCsiJnRleHQ9Iit1bmFtZSsiXG5bICIraWRmKycgfCAnK3B3KyAiIF0iKQ0KCQkJCW9rLmFwcGVuZCh3cnQpDQoJCQkJYnJlYWsNCgkJCWVsc2U6DQoJCQkJY29udGludWUNCgkJZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOg0KCQkJdGltZS5zbGVlcCgzMSkNCglsb29wKz0xDQoJDQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1bIFNZU1RFTS1DT05UUk9MIF0tLS0tLS0tLS0tLS0tLS0tLS0tLSMNCg0KaWYgX19uYW1lX189PSdfX21haW5fXyc6DQoJdHJ5Om9zLm1rZGlyKCdPSycpDQoJZXhjZXB0OnBhc3MNCgl0cnk6b3MubWtkaXIoJ0NQJykNCglleGNlcHQ6cGFzcw0KCXRyeTpvcy5ta2RpcignZGF0YScpDQoJZXhjZXB0OnBhc3MNCgl0cnk6b3Muc3lzdGVtKCd0b3VjaCAucHJveC50eHQnKQ0KCWV4Y2VwdDpwYXNzDQoJbG9naW4oKQ0KDQoNCiNMT1RTIE9GIExPVkUgRlJPTSBBWFMg8J+Mug=="))